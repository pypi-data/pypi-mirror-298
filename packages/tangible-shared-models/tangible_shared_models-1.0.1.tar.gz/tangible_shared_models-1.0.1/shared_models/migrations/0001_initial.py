# Generated by Django 5.1 on 2024-08-21 13:50

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessEntities',
            fields=[
                ('business_entity_id', models.AutoField(primary_key=True, serialize=False)),
                ('entity_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'business_entities',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ChangeOrderResources',
            fields=[
                ('role_id', models.IntegerField()),
                ('level_id', models.IntegerField()),
                ('currency_id', models.IntegerField()),
                ('region_id', models.IntegerField()),
                ('headcount', models.IntegerField()),
                ('change_order_resource_id', models.AutoField(primary_key=True, serialize=False)),
                ('off_card_rate', models.DecimalField(blank=True, decimal_places=0, max_digits=19, null=True)),
                ('rate_card_rate', models.DecimalField(blank=True, decimal_places=0, max_digits=19, null=True)),
                ('monthly_hours', models.IntegerField()),
                ('status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'change_order_resources',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Currencies',
            fields=[
                ('currency_id', models.AutoField(primary_key=True, serialize=False)),
                ('currency_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'currencies',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('customer_id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'customers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DocumentTypes',
            fields=[
                ('document_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('document_type_name', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'document_types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FileUrls',
            fields=[
                ('file_id', models.AutoField(primary_key=True, serialize=False)),
                ('file_type', models.IntegerField()),
                ('file_url', models.CharField(max_length=5000)),
                ('file_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'file_urls',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='InfosysBusinessEntities',
            fields=[
                ('infosys_entity_id', models.AutoField(primary_key=True, serialize=False)),
                ('entity_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'infosys_business_entities',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Levels',
            fields=[
                ('level_id', models.AutoField(primary_key=True, serialize=False)),
                ('level_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'levels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Milestones',
            fields=[
                ('milestone_id', models.AutoField(primary_key=True, serialize=False)),
                ('milestone_number', models.IntegerField()),
                ('milestone_description', models.CharField(max_length=255)),
                ('due_date', models.DateField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'milestones',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MilestoneTypes',
            fields=[
                ('milestone_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('milestone_type_name', models.CharField(blank=True, max_length=255, null=True)),
                ('requires_milestone', models.BooleanField()),
            ],
            options={
                'db_table': 'milestone_types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PricingModels',
            fields=[
                ('pricing_model_id', models.AutoField(primary_key=True, serialize=False)),
                ('pricing_model_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'pricing_models',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RateCards',
            fields=[
                ('rate_card_id', models.AutoField(primary_key=True, serialize=False)),
                ('rate_card_name', models.CharField(max_length=255)),
                ('created_on', models.DateField()),
                ('expires_on', models.DateField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'rate_cards',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Regions',
            fields=[
                ('region_id', models.AutoField(primary_key=True, serialize=False)),
                ('region_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'regions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('role_id', models.AutoField(primary_key=True, serialize=False)),
                ('role_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'roles',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ServiceDomains',
            fields=[
                ('service_domain_id', models.AutoField(primary_key=True, serialize=False)),
                ('domain_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'service_domains',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ServiceRegions',
            fields=[
                ('service_region_id', models.AutoField(primary_key=True, serialize=False)),
                ('region_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'service_regions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ServiceTypes',
            fields=[
                ('service_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('service_type_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'service_types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ChangeOrderResourceRates',
            fields=[
                ('month', models.DateField()),
                ('hours', models.DecimalField(decimal_places=0, max_digits=19)),
                ('change_order_resource_rate_id', models.AutoField(primary_key=True, serialize=False)),
                ('change_order_resource', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.changeorderresources')),
            ],
            options={
                'db_table': 'change_order_resource_rates',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ChangeOrders',
            fields=[
                ('change_order_id', models.AutoField(primary_key=True, serialize=False)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('expires_on', models.DateField()),
                ('final_contract_file', models.TextField(blank=True, null=True)),
                ('generated_contract_file', models.TextField(blank=True, null=True)),
                ('goals', models.TextField(blank=True, null=True)),
                ('change_order_name', models.CharField(max_length=255)),
                ('pricing_model_id', models.IntegerField()),
                ('procurement_contract_email', models.CharField(blank=True, max_length=255, null=True)),
                ('procurement_contract_name', models.CharField(blank=True, max_length=255, null=True)),
                ('program_name', models.CharField(blank=True, max_length=255, null=True)),
                ('service_type_id', models.IntegerField()),
                ('start_date', models.DateField(blank=True, null=True)),
                ('status', models.IntegerField()),
                ('document_number', models.CharField(blank=True, max_length=255, null=True)),
                ('contract_details', models.TextField(blank=True, null=True)),
                ('business_entity', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.businessentities')),
                ('document_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.documenttypes')),
                ('infosys_entity', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.infosysbusinessentities')),
            ],
            options={
                'db_table': 'change_orders',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='changeorderresources',
            name='change_order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.changeorders'),
        ),
        migrations.CreateModel(
            name='ContractTemplates',
            fields=[
                ('contract_template_id', models.AutoField(primary_key=True, serialize=False)),
                ('template_name', models.CharField(max_length=255)),
                ('template_content', models.TextField()),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.customers')),
            ],
            options={
                'db_table': 'contract_templates',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ChangeOrderFiles',
            fields=[
                ('change_order_file_id', models.AutoField(primary_key=True, serialize=False)),
                ('change_order', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.changeorders')),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.fileurls')),
            ],
            options={
                'db_table': 'change_order_files',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MasterAgreements',
            fields=[
                ('master_agreement_id', models.AutoField(primary_key=True, serialize=False)),
                ('agreement_name', models.CharField(max_length=255)),
                ('agreement_status', models.IntegerField()),
                ('created_on', models.DateField()),
                ('expires_on', models.DateField()),
                ('agreement_url', models.CharField(max_length=500)),
                ('initial_contract_text', models.TextField(blank=True, null=True)),
                ('created_at', models.DateField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.BooleanField()),
                ('deleted_at', models.DateField(blank=True, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=255, null=True)),
                ('last_modified_at', models.DateField(blank=True, null=True)),
                ('last_modified_by', models.CharField(blank=True, max_length=255, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.customers')),
                ('rate_card', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.ratecards')),
            ],
            options={
                'db_table': 'master_agreements',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='changeorders',
            name='master_agreement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.masteragreements'),
        ),
        migrations.CreateModel(
            name='ChangeOrderMilestones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_order', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.changeorders')),
                ('milestone', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.milestones')),
            ],
            options={
                'db_table': 'change_order_milestones',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='changeorders',
            name='milestone_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.milestonetypes'),
        ),
        migrations.CreateModel(
            name='RateCardRates',
            fields=[
                ('rate_id', models.AutoField(primary_key=True, serialize=False)),
                ('rate', models.DecimalField(decimal_places=0, max_digits=19)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.currencies')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.levels')),
                ('rate_card', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.ratecards')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.regions')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.roles')),
            ],
            options={
                'db_table': 'rate_card_rates',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='changeorders',
            name='service_domain',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.servicedomains'),
        ),
        migrations.AddField(
            model_name='changeorders',
            name='service_region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.serviceregions'),
        ),
        migrations.CreateModel(
            name='WorkOrderResources',
            fields=[
                ('headcount', models.IntegerField()),
                ('work_order_resource_id', models.AutoField(primary_key=True, serialize=False)),
                ('off_card_rate', models.DecimalField(blank=True, decimal_places=0, max_digits=19, null=True)),
                ('rate_card_rate', models.DecimalField(blank=True, decimal_places=0, max_digits=19, null=True)),
                ('monthly_hours', models.IntegerField()),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.currencies')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.levels')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.regions')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.roles')),
            ],
            options={
                'db_table': 'work_order_resources',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WorkOrderResourceRates',
            fields=[
                ('month', models.CharField(max_length=40)),
                ('hours', models.DecimalField(decimal_places=0, max_digits=19)),
                ('work_order_resource_rate_id', models.AutoField(primary_key=True, serialize=False)),
                ('work_order_resource', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.workorderresources')),
            ],
            options={
                'db_table': 'work_order_resource_rates',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WorkOrders',
            fields=[
                ('work_order_id', models.AutoField(primary_key=True, serialize=False)),
                ('procurement_contract_name', models.CharField(blank=True, max_length=255, null=True)),
                ('procurement_contract_email', models.CharField(blank=True, max_length=255, null=True)),
                ('work_order_name', models.CharField(max_length=255)),
                ('created_on', models.DateField()),
                ('expires_on', models.DateField()),
                ('work_order_status', models.IntegerField()),
                ('program_name', models.CharField(blank=True, max_length=255, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('work_order_goals', models.TextField(blank=True, null=True)),
                ('generated_contract_file', models.TextField(blank=True, null=True)),
                ('final_contract_file', models.TextField(blank=True, null=True)),
                ('created_at', models.DateField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=255, null=True)),
                ('is_deleted', models.BooleanField()),
                ('deleted_at', models.DateField(blank=True, null=True)),
                ('deleted_by', models.CharField(blank=True, max_length=255, null=True)),
                ('last_modified_at', models.DateField(blank=True, null=True)),
                ('last_modified_by', models.CharField(blank=True, max_length=255, null=True)),
                ('contract_details', models.TextField(blank=True, null=True)),
                ('client_entity', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.businessentities')),
                ('infosys_entity', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.infosysbusinessentities')),
                ('master_agreement', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.masteragreements')),
                ('milestone_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.milestonetypes')),
                ('pricing_model', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.pricingmodels')),
                ('service_domain', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.servicedomains')),
                ('service_region', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.serviceregions')),
                ('service_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.servicetypes')),
            ],
            options={
                'db_table': 'work_orders',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='workorderresources',
            name='work_order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.workorders'),
        ),
        migrations.CreateModel(
            name='WorkOrderMilestones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('milestone', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.milestones')),
                ('work_order', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.workorders')),
            ],
            options={
                'db_table': 'work_order_milestones',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WorkOrderFiles',
            fields=[
                ('work_order_file_id', models.AutoField(primary_key=True, serialize=False)),
                ('work_order_reference_id', models.IntegerField()),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.fileurls')),
                ('work_order', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='shared_models.workorders')),
            ],
            options={
                'db_table': 'work_order_files',
                'managed': True,
            },
        ),
        migrations.RunSQL(
            """
            INSERT INTO service_types (service_type_name) VALUES ('Program Support Services');
            INSERT INTO service_types (service_type_name) VALUES ('Managed Services');
            INSERT INTO service_types (service_type_name) VALUES ('Project Services');
            INSERT INTO service_types (service_type_name) VALUES ('Time and Expense');
            INSERT INTO milestone_types (milestone_type_name,requires_milestone) VALUES ('Calendar',TRUE);
            INSERT INTO milestone_types (milestone_type_name,requires_milestone) VALUES ('Deliverable Acceptance',TRUE);
            INSERT INTO pricing_models (pricing_model_name) VALUES ('Time And Expense');
            INSERT INTO pricing_models (pricing_model_name) VALUES ('Time And Expense');
            """
        ),
    ]

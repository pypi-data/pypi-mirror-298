# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class AccountDetailsAndActionsStatusEnum(str, enum.Enum):
    """
    - `COMPLETE` - COMPLETE
    - `INCOMPLETE` - INCOMPLETE
    - `RELINK_NEEDED` - RELINK_NEEDED
    """

    COMPLETE = "COMPLETE"
    INCOMPLETE = "INCOMPLETE"
    RELINK_NEEDED = "RELINK_NEEDED"

    def visit(
        self,
        complete: typing.Callable[[], T_Result],
        incomplete: typing.Callable[[], T_Result],
        relink_needed: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is AccountDetailsAndActionsStatusEnum.COMPLETE:
            return complete()
        if self is AccountDetailsAndActionsStatusEnum.INCOMPLETE:
            return incomplete()
        if self is AccountDetailsAndActionsStatusEnum.RELINK_NEEDED:
            return relink_needed()

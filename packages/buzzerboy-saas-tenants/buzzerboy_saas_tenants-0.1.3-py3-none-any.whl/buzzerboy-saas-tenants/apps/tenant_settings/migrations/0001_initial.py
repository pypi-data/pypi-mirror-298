# Generated by Django 4.2.9 on 2024-09-20 00:16

import apps.tenant_settings.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('apps_tenant', '0003_alter_tenant_address_alter_tenant_city_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('apps_accounts', '0001_initial'),
        ('apps_localization', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('BASIC', 'Basic Plan'), ('PRO', 'Pro Plan'), ('ENTERPRISE', 'Enterprise Plan')], default='BASIC', help_text='The subscription plan these features apply to.', max_length=10, unique=True)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, help_text='Price of the plan', max_digits=6)),
                ('description', models.TextField(blank=True, help_text='Description of the subscription plan')),
                ('user_limit', models.IntegerField(default=5, help_text='Number of users allowed')),
                ('department_limit', models.IntegerField(default=5, help_text='Number of departments allowed')),
                ('vulnerability_limit', models.IntegerField(default=5, help_text='Number of vulnerabilities allowed')),
                ('storage_limit', models.IntegerField(default=5, help_text='Storage limit in GB')),
                ('dashboard_access', models.BooleanField(default=False, help_text='Access to dashboard')),
                ('api_access', models.BooleanField(default=False, help_text='Access to API')),
                ('advanced_support', models.BooleanField(default=False, help_text='Access to advanced support')),
            ],
        ),
        migrations.CreateModel(
            name='SupportCase',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('request_type', models.CharField(choices=[('bug', 'Bug Report'), ('feature', 'Feature Request'), ('support', 'Support Inquiry')], max_length=20)),
                ('summary', models.CharField(max_length=255)),
                ('detailed_description', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('resolved', 'Resolved'), ('in_progress', 'In Progress')], default='pending', max_length=20)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL)),
                ('last_updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SupportCaseResponse',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('attachment', models.FileField(blank=True, null=True, upload_to=apps.tenant_settings.models.SupportCaseResponse.upload_support_case_attachments)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='apps_tenant_settings.supportcase')),
                ('last_updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BillingDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billing_contact_name', models.CharField(max_length=50, null=True)),
                ('billing_contact_address', models.CharField(max_length=50, null=True)),
                ('billing_contact_city', models.CharField(max_length=50, null=True)),
                ('billing_contact_postalcode', models.CharField(max_length=50, null=True)),
                ('billing_contact_email', models.EmailField(max_length=255, null=True)),
                ('billing_contact_telephone', models.CharField(max_length=20, null=True)),
                ('billing_contact_country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tenant_billing_country', to='apps_localization.country')),
                ('billing_contact_state_province', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tenant_billing_state', to='apps_localization.stateprovince')),
                ('tenant', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='tenant_billing', to='apps_tenant.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity', models.CharField(max_length=255, null=True)),
                ('module', models.CharField(max_length=255, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('details', models.JSONField(blank=True, null=True)),
                ('performed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='tenant_activity_performed_by', to='apps_accounts.userprofile')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='tenant_audit_logs', to='apps_tenant.tenant')),
            ],
        ),
    ]

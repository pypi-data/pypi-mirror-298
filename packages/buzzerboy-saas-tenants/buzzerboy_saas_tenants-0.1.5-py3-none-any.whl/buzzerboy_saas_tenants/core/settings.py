"""
Django settings for Duralux.

Generated by 'django-admin startproject' using Django 4.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
from decouple import config
from pathlib import Path
from django.utils.translation import gettext_lazy as _
import os

from socket import gethostbyname
from socket import gethostname
from buzzerboy_saas_tenants.core import helpers as helpers

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent
BASE_DIR = Path(__file__).parent.parent
# print('BASE_DIR',BASE_DIR)
CORE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# print('CORE_DIR',CORE_DIR)



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY', default='S#perS3crEt_1122')

# DEBUG = config('DEBUG', default=True, cast=bool)
DEBUG = True


SITE_URL = 'http://127.0.0.1:8000'

EMAIL_BACKEND = config('EMAIL_BACKEND', default='django.core.mail.backends.console.EmailBackend')
EMAIL_HOST = config('EMAIL_HOST', default='smtp.titan.email')
EMAIL_PORT = config('EMAIL_PORT', cast=int, default=587)
EMAIL_USE_TLS = config('EMAIL_USE_TLS', cast=bool, default=True)
EMAIL_HOST_USER = config('EMAIL_HOST_USER', default="dev@buzzerboysites.com")
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD', default="")
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER 

# Assets Management
ASSETS_ROOT = os.getenv('ASSETS_ROOT', '/static/assets') 


ALLOWED_HOSTS_CSV = os.getenv('ALLOWED_HOSTS_CSV', '*')
ALLOWED_HOSTS        = ['127.0.0.1']

CSRF_TRUSTED_ORIGINS = ['http://localhost:85', 'http://127.0.0.1']
ALLOWED_HOSTS.append(gethostbyname(gethostname()))
ALLOWED_HOSTS += [origin.strip() for origin in ALLOWED_HOSTS_CSV.split(',')]
CSRF_TRUSTED_ORIGINS = helpers.getCSRFHostsFromAllowedHosts(ALLOWED_HOSTS)



# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'buzzerboy_saas_tenants.core',
    'buzzerboy_saas_tenants.apps.authentication',
    'buzzerboy_saas_tenants.apps.accounts',
    'buzzerboy_saas_tenants.apps.invites',
    'buzzerboy_saas_tenants.apps.account_settings',
    'buzzerboy_saas_tenants.apps.tenant',
    'buzzerboy_saas_tenants.apps.tenant_settings',
    'buzzerboy_saas_tenants.apps.localization',
    'django_seed',
    'ckeditor',
    'ckeditor_uploader',
    "django_htmx",
]

CKEDITOR_UPLOAD_PATH = "uploads/"
CKEDITOR_BASEPATH = os.getenv('CKEDITOR_BASEPATH', "/static/ckeditor/ckeditor/")

CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'Custom',
        'width': '100%',
        'toolbar_Custom': [
            ['Styles', 'Format', 'Bold', 'Italic', 'Underline',
                'Strike', 'SpellChecker', 'Undo', 'Redo'],
            ['Link', 'Unlink', 'Anchor'],
            ['Image', 'Table', 'HorizontalRule'],
            ['TextColor', 'BGColor'],
            ['Smiley', 'SpecialChar'], ['Source'],
            ['JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'],
            ['NumberedList', 'BulletedList'],
            ['Indent', 'Outdent'],
            ['Maximize'],
        ],
        'autoParagraph': False,
        'enterMode': 2,
    }
}


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "django_htmx.middleware.HtmxMiddleware",
    'buzzerboy_saas_tenants.core.middleware.HandleHTTPErrorsMiddleware',
]

ROOT_URLCONF = 'buzzerboy_saas_tenants.core.urls'
LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = "home"  # Route defined in home/urls.py
LOGOUT_REDIRECT_URL = "home"  # Route defined in home/urls.py

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(CORE_DIR, 'media')

# Ensure only one TEMPLATE_DIR definition
TEMPLATE_DIR = os.path.join(CORE_DIR, "html5_ui")  # ROOT dir for templates

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.i18n'
            ],
        },
    },
]

WSGI_APPLICATION = 'buzzerboy_saas_tenants.core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


SQLLITE_DB = BASE_DIR / 'db.sqlite3'

DATABASE_NAME = config('DATABASE_NAME', default=SQLLITE_DB)
DATABASE_USER = config('DATABASE_USER', default='')
DATABASE_PASSWORD = config('DATABASE_PASSWORD', default='')
DATABASE_HOST = config('DATABASE_HOST', default='')
DATABASE_PORT = config('DATABASE_PORT', default='')
DATABASE_BACKEND = config('DATABASE_BACKEND', default='django.db.backends.sqlite3')

DATABASES = {
    'default': {
        'ENGINE': DATABASE_BACKEND,
        'NAME': DATABASE_NAME,
        'USER': DATABASE_USER,
        'PASSWORD': DATABASE_PASSWORD,
        'HOST': DATABASE_HOST ,
        'PORT': DATABASE_PORT,
    }
}




# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

# print (f'STATIC_ROOT: {STATIC_ROOT}')
# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'

# Directory where static files are stored
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

# Set STATIC_ROOT to None to avoid using collectstatic
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
# print(f'STATICFILES_DIRS: {STATICFILES_DIRS}')

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Language
LANGUAGES = [
    ('en', _('English')),
    ('fr', _('French')),
]

LOCALE_PATHS = [
    os.path.join(CORE_DIR, 'html5_ui/locale'),
]

LANGUAGE_CODE = 'en'
USE_I18N = True
USE_L10N = True
USE_TZ = True


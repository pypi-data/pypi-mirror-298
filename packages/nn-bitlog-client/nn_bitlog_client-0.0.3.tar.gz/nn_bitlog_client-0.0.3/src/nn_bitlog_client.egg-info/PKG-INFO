Metadata-Version: 2.1
Name: nn-bitlog-client
Version: 0.0.3
Summary: Python SDK for BitlogWMS API
Author: Nordic Nest
License: License text copyright (c) 2020 MariaDB Corporation Ab, All Rights Reserved.
        "Business Source License" is a trademark of MariaDB Corporation Ab.
        
        Parameters
        
        Licensor:             Nordic Nest AB.
        Licensed Work:        nn-bitlog-client. The Licensed Work is (c) 2023
                              Nordic Nest AB.
        Change Date:          Four years from the date the Licensed Work is published.
        Change License:       MPL 2.0
        
        Notice
        
        Business Source License 1.1
        
        Terms
        
        The Licensor hereby grants you the right to copy, modify, create derivative
        works, redistribute, and make non-production use of the Licensed Work. The
        Licensor may make an Additional Use Grant, above, permitting limited production use.
        
        Effective on the Change Date, or the fourth anniversary of the first publicly
        available distribution of a specific version of the Licensed Work under this
        License, whichever comes first, the Licensor hereby grants you rights under
        the terms of the Change License, and the rights granted in the paragraph
        above terminate.
        
        If your use of the Licensed Work does not comply with the requirements
        currently in effect as described in this License, you must purchase a
        commercial license from the Licensor, its affiliated entities, or authorized
        resellers, or you must refrain from using the Licensed Work.
        
        All copies of the original and modified Licensed Work, and derivative works
        of the Licensed Work, are subject to this License. This License applies
        separately for each version of the Licensed Work and the Change Date may vary
        for each version of the Licensed Work released by Licensor.
        
        You must conspicuously display this License on each original or modified copy
        of the Licensed Work. If you receive the Licensed Work in original or
        modified form from a third party, the terms and conditions set forth in this
        License apply to your use of that work.
        
        Any use of the Licensed Work in violation of this License will automatically
        terminate your rights under this License for the current and all other
        versions of the Licensed Work.
        
        This License does not grant you any right in any trademark or logo of
        Licensor or its affiliates (provided that you may use a trademark or logo of
        Licensor as expressly required by this License).
        
        TO THE EXTENT PERMITTED BY APPLICABLE LAW, THE LICENSED WORK IS PROVIDED ON
        AN "AS IS" BASIS. LICENSOR HEREBY DISCLAIMS ALL WARRANTIES AND CONDITIONS,
        EXPRESS OR IMPLIED, INCLUDING (WITHOUT LIMITATION) WARRANTIES OF
        MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, AND
        TITLE.
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: requests

# nn-bitlog-client

This is the Python SDK for the BitlogWMS API. It allows you to interact with the Bitlog API using Python.

## Installation

You can install the package from PyPi using pip:

```bash
pip install nn-bitlog-client
```

## Usage
After installation, you can import the package in your Python scripts as follows:
```python
import bitlogclient
```

### Generate token
To generate a token to be used for authentication you can do this with this snippet:

```python
from bitlogclient import Token

token = Token(
    domain='your_domain',
    basic_auth_user= 'your_auth_user',
    basic_auth_password= 'your_auth_password',
    username='your_username', password='your_password).get_token()
```

### List available dataviews
To list all available dataviews you can use this snippet:

```python
from bitlogclient import Report

views = Report(
    token='your_token,
    domain='your_domain').list_views()
```

### Get dataview
To get data from a dataview without parameters you can use this snippet:

```python
from bitlogclient import Report

data = Report(
    token='your_token,
    domain='your_domain').get_view('your_view_name')
```

### Get dataview with parameters
To get data from a dataview with parameters you can use this snippet:

```python
from bitlogclient import Report, ReportParams

data = Report(
    token='your_token,
    domain='your_domain').get_view_with_params(
        'your_view_name',
        [
            ReportParams('from_date', 'date', '2023-01-01'),
            ReportParams('to_date', 'date', '2023-01-01'),
        ])
```

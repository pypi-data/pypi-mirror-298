{"version":3,"file":"lib_index_js.37bed3c798ed33d8b143.js","mappings":";;;;;;;;;;;;;;;AAIwD;AAExD;;GAEG;AACH,MAAM,MAAM,GAAgC;IAC1C,EAAE,EAAE,kCAAkC;IACtC,WAAW,EAAE,2BAA2B;IACxC,QAAQ,EAAE,CAAC,kEAAgB,CAAC;IAC5B,SAAS,EAAE,IAAI;IACf,QAAQ,EAAE,CAAC,GAAoB,EAAE,OAAyB,EAAE,EAAE;QAC5D,OAAO,CAAC,GAAG,CAAC,8DAA8D,CAAC,CAAC;QAE5E,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,aAAa,EAAE,EAAE;YACpD,aAAa,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE;gBAC3C,MAAM,OAAO,GAAG,aAAa,CAAC,cAAc,CAAC,OAAO,CAAC;gBACrD,IAAI,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,EAAE;oBACnB,OAAO,CAAC,MAAM,CAAC,cAAc,CAAC;wBAC5B,IAAI,EAAE,sBAAsB;qBAC7B,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,MAAM,mBAAmB,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC1D,mBAAmB,CAAC,SAAS,GAAG,uBAAuB,CAAC;QACxD,mBAAmB,CAAC,WAAW,GAAG,yBAAyB,CAAC;QAE5D,gDAAgD;QAChD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC;QAE/C,8DAA8D;QAE9D,MAAM,CAAC,MAAM,GAAG;YACd,MAAM,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;YAC3D,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAC3B,IAAI,aAAa,EAAE;gBACjB,aAAa,CAAC,MAAM,EAAE,CAAC,CAAE,0CAA0C;aACpE;QACH,CAAC,CAAC;QACF,uBAAuB;QACvB,4BAA4B;QAC5B,IAAI;QAEJ,4BAA4B;QAC5B,oDAAoD;QACpD,MAAM;IACR,CAAC;CACF,CAAC;AAEF,iEAAe,MAAM,EAAC","sources":["webpack://pergamon_server_extension/./src/index.ts"],"sourcesContent":["import {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\nimport { INotebookTracker } from '@jupyterlab/notebook';\n\n/**\n * Initialization data for the pergamon_server_extension extension.\n */\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: 'pergamon_server_extension:plugin',\n  description: 'Calliope server extension',\n  requires: [INotebookTracker],\n  autoStart: true,\n  activate: (app: JupyterFrontEnd, tracker: INotebookTracker) => {\n    console.log('JupyterLab extension pergamon_server_extension is activated!');\n\n    tracker.widgetAdded.connect((sender, notebookPanel) => {\n      notebookPanel.sessionContext.ready.then(() => {\n        const session = notebookPanel.sessionContext.session;\n        if (session?.kernel) {\n          session.kernel.requestExecute({\n            code: '%load_ext jupyter_ai'\n          });\n        }\n      });\n    });\n\n    const customLoadingScreen = document.createElement('div');\n    customLoadingScreen.className = 'custom-loading-screen';\n    customLoadingScreen.textContent = 'Loading, please wait...';\n\n    // Add the custom loading screen to the document\n    document.body.appendChild(customLoadingScreen);\n\n    // const splashElement = document.querySelector('.jp-Splash');\n\n    window.onload = function() {\n      const splashElement = document.querySelector('.jp-Splash');\n      console.log(splashElement);\n      if (splashElement) {\n        splashElement.remove();  // O cualquier acciÃ³n que quieras realizar\n      }\n    };\n    // if (splashElement) {\n    //   splashElement.remove();\n    // }\n\n    // app.restored.then(() => {\n    //   document.body.removeChild(customLoadingScreen);\n    // });\n  }\n};\n\nexport default plugin;\n"],"names":[],"sourceRoot":""}
Metadata-Version: 2.3
Name: yt-dlp-invidious
Version: 0.0.2
Author: grqz
License: This is free and unencumbered software released into the public domain.
        
        Anyone is free to copy, modify, publish, use, compile, sell, or
        distribute this software, either in source code form or as a compiled
        binary, for any purpose, commercial or non-commercial, and by any
        means.
        
        In jurisdictions that recognize copyright laws, the author or authors
        of this software dedicate any and all copyright interest in the
        software to the public domain. We make this dedication for the benefit
        of the public at large and to the detriment of our heirs and
        successors. We intend this dedication to be an overt act of
        relinquishment in perpetuity of all present and future rights to this
        software under copyright law.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
        EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
        IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
        OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
        ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
        OTHER DEALINGS IN THE SOFTWARE.
        
        For more information, please refer to <http://unlicense.org/>
License-File: LICENSE
Keywords: yt-dlp,yt-dlp-plugin
Requires-Python: >=3.8
Description-Content-Type: text/markdown

# yt-dlp-invidious
This is a plugin for [yt-dlp](https://github.com/yt-dlp/yt-dlp#readme).  
The plugin adds two extractors: `InvidiousIE` and `InvidiousPlaylistIE`.  
The code is based on https://github.com/ytdl-org/youtube-dl/pull/31426.

## Installation

1. Download the latest release zip from [releases](https://github.com/grqz/yt-dlp-invidious/releases)

2. Add the zip to one of the [yt-dlp plugin locations](https://github.com/yt-dlp/yt-dlp#installing-plugins)

    - User Plugins
        - `${XDG_CONFIG_HOME}/yt-dlp/plugins` (recommended on Linux/MacOS)
        - `~/.yt-dlp/plugins/`
        - `${APPDATA}/yt-dlp/plugins/` (recommended on Windows)

    - System Plugins
       -  `/etc/yt-dlp/plugins/`
       -  `/etc/yt-dlp-plugins/`

    - Executable location
        - Binary: where `<root-dir>/yt-dlp.exe`, `<root-dir>/yt-dlp-plugins/`

For more locations and methods, see [installing yt-dlp plugins](https://github.com/yt-dlp/yt-dlp#installing-plugins)

## Usage
Pass `--ies Invidious,InvidiousPlaylistIE` to yt-dlp. The plugin automatically matches the video id so you can just pass a YouTube link or even just a video_id.

### Extractor arguments
`InvidiousIE`:
- `max_retries`: maxium retry times.  
	e.g. `--extractor-args "Invidious:max_retries=infinite"` (unrecommended),  
	`--extractor-args "Invidious:max_retries=3"`, etc.


<!--This repository contains a sample plugin package for [yt-dlp](https://github.com/yt-dlp/yt-dlp#readme).

See [yt-dlp plugins](https://github.com/yt-dlp/yt-dlp#plugins) for more details.


## Installation

Requires yt-dlp `2023.01.02` or above.

You can install this package with pip:
```
python3 -m pip install -U https://github.com/yt-dlp/yt-dlp-sample-plugins/archive/master.zip
```

See [installing yt-dlp plugins](https://github.com/yt-dlp/yt-dlp#installing-plugins) for the other methods this plugin package can be installed.


## Development

See the [Plugin Development](https://github.com/yt-dlp/yt-dlp/wiki/Plugin-Development) section of the yt-dlp wiki.
Add required dependencies to the `dependencies` section in the `pyproject.toml`.
From within the plugin, use an import pattern similar to the following:
```py
import sys
import pathlib


import_path = str(pathlib.Path(__file__).parent.parent.parent)

sys.path.insert(0, import_path)
try:
	import some_dependency

except ImportError:
	some_dependency = None

finally:
	sys.path.remove(import_path)
```

## Release

To create a release, simply increment the version in the `pyproject.toml` file.
While convenient, conditional requirements or non pure python modules will most likely not work.
Please edit the `.github/workflows/release.yml` accordingly if you require more control.
-->
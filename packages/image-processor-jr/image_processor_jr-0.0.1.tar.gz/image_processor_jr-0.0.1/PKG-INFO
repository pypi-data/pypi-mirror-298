Metadata-Version: 2.1
Name: image_processor_jr
Version: 0.0.1
Summary: Pacote para processamento de imagens.
Home-page: https://github.com/jacivaldocarvalho/image-processing
Author: Jacivaldo Carvalho
Author-email: jacivaldocarvalho@gmail.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Requires-Python: >=3.9.5
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: opencv-python
Requires-Dist: numpy

# PROCESSADOR DE IMAGENS EM PYTHON

Um pacote Python para processamento básico de imagens, incluindo conversão para escala de cinza e combinação de duas imagens.

## Índice

- [PROCESSADOR DE IMAGENS EM PYTHON](#processador-de-imagens-em-python)
  - [Índice](#índice)
  - [Estrutura do Repositório](#estrutura-do-repositório)
  - [Instalação](#instalação)
  - [Funcionalidades](#funcionalidades)
  - [Uso](#uso)
  - [Testes](#testes)
  - [Conclusão](#conclusão)
  - [Contribuições](#contribuições)
  - [Licenciamento](#licenciamento)
  - [Autor](#autor)

## Estrutura do Repositório

````
image_processor/
│
├── image_processor/
│   ├── __init__.py
│   ├── processing_image.py
│
├── tests/
│   ├── __init__.py
│   ├── test_processing.py
│
├── README.md
├── setup.py
└── requirements.txt
````

## Instalação

Para instalar o pacote, use o pip:

```bash
pip install image_processor_jr
```

## Funcionalidades

- to_grayscale(image_path, save_path=None): Converte uma imagem para escala de cinza;
- combine_images(image_path1, image_path2, save_path=None): Combina duas imagens usando uma média.

## Uso

``` python
from image_processor_jr.processing_image import to_grayscale, combine_images

# Converter imagem para escala de cinza
gray_image = to_grayscale('imagem1.jpg', save_path='gray_image.jpg')

# Combinar duas imagens
combined_image = combine_images('imagem1.jpg', 'imagem2',
                                save_path='combine_image.jpg')
```

## Testes
Para executar os testes, utilize:

```bash
python -m unittest discover tests/
```

## Conclusão

Seguir essas boas práticas ajudará a criar um ambiente colaborativo mais eficiente e agradável. Mantenha sempre a comunicação aberta e esteja disposto a aprender e adaptar-se. Boas contribuições!

## Contribuições
Sinta-se à vontade para contribuir. Faça um fork do projeto, crie uma branch para suas alterações e envie um pull request.

## Licenciamento

Este projeto é licenciado sob a [MIT License](LICENSE) - veja o arquivo LICENSE para mais detalhes.

## Autor

Juninho Carvalho [LinkedIn](https://www.linkedin.com/in/jacivaldocarvalho/)



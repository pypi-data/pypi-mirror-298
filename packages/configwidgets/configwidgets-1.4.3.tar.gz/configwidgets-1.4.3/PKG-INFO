Metadata-Version: 2.1
Name: configwidgets
Version: 1.4.3
Summary: Subclassing PyQt5.QtWidgets to syncronize state in QSettings object.
Author-email: Kolja Wagner <k.wagner@meteo.uni-hannover.de>
Project-URL: Documentation, https://configwidgets.readthedocs.io/en/latest/
Project-URL: Repository, https://github.com/kolja-wagner/configwidgets
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: qtpy>2
Provides-Extra: dev
Requires-Dist: pytest; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Requires-Dist: pytest-qt; extra == "dev"
Provides-Extra: doc
Requires-Dist: sphinx>5.3; extra == "doc"
Requires-Dist: sphinx-qt-documentation; extra == "doc"
Requires-Dist: pydata-sphinx-theme>0.14; extra == "doc"
Requires-Dist: sphinx-copybutton; extra == "doc"

# configwidgets

Subclassing `QWidgets` to save the widget state in a `QSettings` Instance.
A `setup` method links the widget to key within the `QSettings` instance. 
The value is loaded during setup and gets stored when the widget state changes.
Without calling this method, the widget has no special behaviour.

See the following snippet for a minimal example:
```
from PyQt5.QtCore import QSettings
from configwidgets import ConfigCheckBox

config = QSettings()
checkBox = ConfigCheckBox()
checkBox.setup(config, "checkBox")
```

## setup

install the package via pip:
```
pip install configwidgets
```

The full documentation can be found under 
[configwidgets documentation](https://configwidgets.readthedocs.io/en/latest/index.html)
The source code can be found under
[configwidgets repository](https://github.com/kolja-wagner/configwidgets)

[project]
name = "pvtool"
description = "This tool contains validation logic for the BO4E migration data model (ibims). It uses the pvframework. "
license = { text = "MIT" }
requires-python = ">=3.11"
authors = [{ name = "Hochfrequenz Unternehmensberatung GmbH", email = "info@hochfrequenz.de" }]
keywords = ["python", "validation", "migration", "bo4e"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "bomf",
    "ibims>=0.3.6",
    "more_itertools",
    "pydantic[email]",
    "pvframework>=0.0.8",
    "python-dateutil",
    "pytz",
    "schwifty"
]     # add all the dependencies from requirements.in here, too
dynamic = ["readme", "version"]

[project.optional-dependencies]
coverage = [
    "coverage==7.6.1"
]
formatting = [
    "black==24.8.0",
    "isort==5.13.2"
]
linting = [
    "pylint==3.3.0"
]
spellcheck = [
    "codespell==2.3.0"
]
packaging = [
    "build==1.2.2",
    "twine==5.1.1"
]
tests = [
    "pytest==8.3.3",
    "pytest-asyncio==0.24.0"
]
type_check = [
    "mypy==1.11.2",
    "types-python-dateutil==2.9.0.20240906",
    "types-pytz==2024.2.0.20240913"
]

[project.urls]
Changelog = "https://github.com/Hochfrequenz/pedantic-validator-tool/releases"
Homepage = "https://github.com/Hochfrequenz/pedantic-validator-tool"

[tool.black]
line-length = 120

[tool.isort]
line_length = 120
profile = "black"

[tool.pylint."MESSAGES CONTROL"]
max-line-length = 120
disable="too-few-public-methods"

[build-system]
requires = ["hatchling>=1.8.0", "hatch-vcs", "hatch-fancy-pypi-readme"]
build-backend = "hatchling.build"

[tool.hatch.metadata.hooks.fancy-pypi-readme]
content-type = "text/markdown"
fragments = [{ path = "README.md" }]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "src/_your_package_version.py"
template = '''
version = "{version}"
'''

[tool.hatch.build.targets.sdist]
exclude = ["/unittests"]

[tool.hatch.build.targets.wheel]
only-include = ["src"]
sources = ["src"]

[tool.pytest.ini_options]
# When the mode is auto, all discovered async tests are considered asyncio-driven
# even if they have no @pytest.mark.asyncio marker.
# https://github.com/pytest-dev/pytest-asyncio#auto-mode
asyncio_mode = "auto"

[tool.mypy]
plugins = ["pydantic.mypy"]

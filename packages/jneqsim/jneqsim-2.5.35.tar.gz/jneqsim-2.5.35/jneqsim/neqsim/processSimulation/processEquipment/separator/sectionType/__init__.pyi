
import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import java.lang
import jneqsim.neqsim.processSimulation.mechanicalDesign.separator.sectionType
import jneqsim.neqsim.processSimulation.processEquipment.separator
import jneqsim.neqsim.util
import typing



class SeparatorSection(jneqsim.neqsim.util.NamedBaseClass):
    separator: jneqsim.neqsim.processSimulation.processEquipment.separator.Separator = ...
    outerDiameter: float = ...
    def __init__(self, string: typing.Union[java.lang.String, str], string2: typing.Union[java.lang.String, str], separator: jneqsim.neqsim.processSimulation.processEquipment.separator.Separator): ...
    def calcEfficiency(self) -> float: ...
    def getEfficiency(self) -> float: ...
    def getMechanicalDesign(self) -> jneqsim.neqsim.processSimulation.mechanicalDesign.separator.sectionType.SepDesignSection: ...
    def getMinimumLiquidSealHeight(self) -> float: ...
    def getOuterDiameter(self) -> float: ...
    def getPressureDrop(self) -> float: ...
    def getSeparator(self) -> jneqsim.neqsim.processSimulation.processEquipment.separator.Separator: ...
    def isCalcEfficiency(self) -> bool: ...
    def setCalcEfficiency(self, boolean: bool) -> None: ...
    def setEfficiency(self, double: float) -> None: ...
    def setOuterDiameter(self, double: float) -> None: ...
    def setPressureDrop(self, double: float) -> None: ...
    def setSeparator(self, separator: jneqsim.neqsim.processSimulation.processEquipment.separator.Separator) -> None: ...

class ManwaySection(SeparatorSection):
    def __init__(self, string: typing.Union[java.lang.String, str], string2: typing.Union[java.lang.String, str], separator: jneqsim.neqsim.processSimulation.processEquipment.separator.Separator): ...
    def calcEfficiency(self) -> float: ...
    def getMechanicalDesign(self) -> jneqsim.neqsim.processSimulation.mechanicalDesign.separator.sectionType.MechManwaySection: ...

class MeshSection(SeparatorSection):
    def __init__(self, string: typing.Union[java.lang.String, str], string2: typing.Union[java.lang.String, str], separator: jneqsim.neqsim.processSimulation.processEquipment.separator.Separator): ...
    def calcEfficiency(self) -> float: ...
    def getMechanicalDesign(self) -> jneqsim.neqsim.processSimulation.mechanicalDesign.separator.sectionType.MecMeshSection: ...

class NozzleSection(SeparatorSection):
    def __init__(self, string: typing.Union[java.lang.String, str], string2: typing.Union[java.lang.String, str], separator: jneqsim.neqsim.processSimulation.processEquipment.separator.Separator): ...
    def calcEfficiency(self) -> float: ...
    def getMechanicalDesign(self) -> jneqsim.neqsim.processSimulation.mechanicalDesign.separator.sectionType.MechNozzleSection: ...

class PackedSection(SeparatorSection):
    def __init__(self, string: typing.Union[java.lang.String, str], string2: typing.Union[java.lang.String, str], separator: jneqsim.neqsim.processSimulation.processEquipment.separator.Separator): ...
    def calcEfficiency(self) -> float: ...

class ValveSection(SeparatorSection):
    def __init__(self, string: typing.Union[java.lang.String, str], string2: typing.Union[java.lang.String, str], separator: jneqsim.neqsim.processSimulation.processEquipment.separator.Separator): ...
    def calcEfficiency(self) -> float: ...
    def getMechanicalDesign(self) -> jneqsim.neqsim.processSimulation.mechanicalDesign.separator.sectionType.DistillationTraySection: ...

class VaneSection(SeparatorSection):
    def __init__(self, string: typing.Union[java.lang.String, str], string2: typing.Union[java.lang.String, str], separator: jneqsim.neqsim.processSimulation.processEquipment.separator.Separator): ...
    def calcEfficiency(self) -> float: ...
    def getMechanicalDesign(self) -> jneqsim.neqsim.processSimulation.mechanicalDesign.separator.sectionType.MechVaneSection: ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("jneqsim.neqsim.processSimulation.processEquipment.separator.sectionType")``.

    ManwaySection: typing.Type[ManwaySection]
    MeshSection: typing.Type[MeshSection]
    NozzleSection: typing.Type[NozzleSection]
    PackedSection: typing.Type[PackedSection]
    SeparatorSection: typing.Type[SeparatorSection]
    ValveSection: typing.Type[ValveSection]
    VaneSection: typing.Type[VaneSection]

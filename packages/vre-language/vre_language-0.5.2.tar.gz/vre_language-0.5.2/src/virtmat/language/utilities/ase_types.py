"""type definitions of parameters used in ASE calculators and algorithms"""
import numpy
import pandas

scalar_pars = {}

# VASP parameters have been sourced from
# https://gitlab.com/ase/ase/-/blob/master/ase/calculators/vasp/create_input.py

scalar_pars['vasp'] = {
    # special
    'lreal': (str, bool),
    # ase calc parameters, not from VASP
    'directory': str,
    'command': str,
    'txt': str,
    'restart': bool,
    'xc': str,
    'setups': str,
    'gamma': bool,
    'pp': str,
    'kpts': (numpy.ndarray, pandas.DataFrame),
    'reciprocal': bool,
    'charge': int,
    # floats
    'aexx': float,
    'aggac': float,
    'aggax': float,
    'aldac': float,
    'amin': float,
    'amix': float,
    'amix_mag': float,
    'bmix': float,
    'bmix_mag': float,
    'deper': float,
    'ebreak': float,
    'efield':  float,
    'emax': float,
    'emin': float,
    'enaug': float,
    'encut': float,
    'encutgw': float,
    'encutfock': float,
    'hfscreen': float,
    'kspacing': float,
    'potim': float,


    'param1': float,
    'param2': float,
    'pomass': float,
    'pstress': float,
    'sigma': float,
    'smass': (int, float),
    'weimin': float,
    'zab_vdw': float,
    'zval': float,
    'clz': float,
    'vdw_radius': float,
    'vdw_scaling': float,
    'vdw_d': float,
    'vdw_cnradius': float,
    'vdw_s6': float,
    'vdw_s8': float,
    'vdw_sr': float,
    'vdw_a1': float,
    'vdw_a2': float,
    'langevin_gamma_l': float,
    'pmass': float,
    'bparam': float,
    'cparam': float,
    'aldax': float,
    'tebeg': float,
    'teend': float,
    'andersen_prob': float,
    'apaco': float,
    'ch_sigma': float,
    'cmbj': float,
    'cmbja': float,
    'cmbje': float,
    'encutgwsoft': float,
    'scissor': float,
    'dimer_dist': float,
    'step_size': float,
    'step_max': float,
    'minrot': float,
    'hills_h': float,
    'hfscreenc': float,
    'hfrcut': float,
    'enini': float,
    'enmax': float,
    'epsilon': float,
    'scsrad': float,
    'hitoler': float,
    'nupdown': float,
    'ediff': float,
    'ediffg': float,
    'symprec': float,
    # integers
    'ialgo': int,
    'ibrion': int,
    'icharg': int,
    'idipol': int,
    'images': int,
    'iniwav': int,
    'isif': int,
    'ismear': int,
    'ispin': int,
    'istart': int,
    'isym': int,
    'iwavpr': int,
    'kpar': int,
    'ldauprint': int,
    'ldautype': int,
    'lmaxmix': int,
    'lorbit': int,
    'maxmix': int,
    'ngx': int,
    'ngxf': int,
    'ngy': int,
    'ngyf': int,
    'ngz': int,
    'ngzf': int,
    'nbands': int,
    'nblk': int,
    'nbmod': int,
    'nelm': int,
    'nelmdl': int,
    'nelmgw': int,
    'nelmin': int,
    'nfree': int,
    'nkred': int,
    'nkredx': int,
    'nkredy': int,
    'nkredz': int,
    'nomega': int,
    'nomegar': int,
    'npar': int,
    'nsim': int,
    'nsw': int,
    'nwrite': int,
    'vdwgr': int,
    'vdwrn': int,
    'voskown': int,
    'ichain': int,
    'iopt': int,
    'snl': int,
    'lbfgsmem': int,
    'fnmin': int,
    'icorelevel': int,
    'clnt': int,
    'cln': int,
    'cll': int,
    'ivdw': int,
    'nbandsgw': int,
    'nbandso': int,
    'nbandsv': int,
    'ncore': int,
    'mdalgo': int,
    'nedos': int,
    'turbo': int,
    'omegapar': int,
    'taupar': int,
    'ntaupar': int,
    'antires': int,
    'magatom': int,
    'jatom': int,
    'ichibare': int,
    'nbas': int,
    'rmds': int,
    'ilbfgsmem': int,
    'vcaimages': int,
    'ntemper': int,
    'ncshmem': int,
    'lmaxtau': int,
    'kinter': int,
    'ibse': int,
    'nbseeig': int,
    'naturalo': int,
    'nbandsexact': int,
    'nbandsgwlow': int,
    'nbandslf': int,
    'omegagrid': int,
    'telescope': int,
    'maxmem': int,
    'nelmhf': int,
    'dim': int,
    'nkredlf': int,
    'nkredlfx': int,
    'nkredlfy': int,
    'nkredlfz': int,
    'lmaxmp2': int,
    'switch': int,
    'findiff': int,
    'engine': int,
    'restartcg': int,
    'thermostat': int,
    'scaling': int,
    'shakemaxiter': int,
    'equi_regime': int,
    'hills_bin': int,
    'hills_maxstride': int,
    'dvvehistory': int,
    'ipead': int,
    'ngaus': int,
    'exxoep': int,
    'fourorbit': int,
    'model_gw': int,
    'hflmax': int,
    'lmaxfock': int,
    'lmaxfockae': int,
    'nmaxfockae': int,
    'nblock_fock': int,
    'idiot': int,
    'nrmm': int,
    'mremove': int,
    'inimix': int,
    'mixpre': int,
    'nelmall': int,
    'nblock': int,
    'kblock': int,
    'npaco': int,
    'lmaxpaw': int,
    'irestart': int,
    'nreboot': int,
    'nmin': int,
    'nlspline': int,
    'ispecial': int,
    'rcrep': int,
    'rcndl': int,
    'rcstrd': int,
    'vdw_idampf': int,
    'i_constrained_m': int,
    'igpar': int,
    'nppstr': int,
    'nbands_out': int,
    'kpts_out': int,
    'isp_out': int,
    'nomega_out': int,
    'maxiter_ft': int,
    'nmaxalt': int,
    'itmaxlsq': int,
    'ndatalsq': int,
    'ncore_in_image1': int,
    'kimages': int,
    'ncores_per_band': int,
    'maxlie': int,
    'ncrpalow': int,
    'ncrpahigh': int,
    'nwlow': int,
    'nwhigh': int,
    'nkopt': int,
    'nkoffopt': int,
    'nbvalopt': int,
    'nbconopt': int,
    'ch_nedos': int,
    'plevel': int,
    'qnl': int,
    # strings
    'algo': str,
    'gga': str,
    'metagga': str,
    'prec': str,
    'system': str,
    'precfock': str,
    'radeq': str,
    'localized_basis': str,
    'proutine': str,
    # booleans
    'addgrid': bool,
    'kgamma': bool,
    'laechg': bool,
    'lasph': bool,
    'lasync': bool,
    'lcharg': bool,
    'lcorr': bool,
    'ldau': bool,
    'ldiag': bool,
    'ldipol': bool,
    'lelf': bool,
    'lepsilon': bool,
    'lhfcalc': bool,
    'loptics': bool,
    'lpard': bool,
    'lplane': bool,
    'lscalapack': bool,
    'lscalu': bool,
    'lsepb': bool,
    'lsepk': bool,
    'lthomas': bool,
    'luse_vdw': bool,
    'lvhar': bool,
    'lvtot': bool,
    'lwave': bool,
    'lclimb': bool,
    'ltangentold': bool,
    'ldneb': bool,
    'lnebcell': bool,
    'lglobal': bool,
    'llineopt': bool,
    'lbeefens': bool,
    'lbeefbas': bool,
    'lcalcpol': bool,
    'lcalceps': bool,
    'lvdw': bool,
    'lvdw_ewald': bool,
    'lspectral': bool,
    'lrpa': bool,
    'lwannier90': bool,
    'lsorbit': bool,
    'lsol': bool,
    'lautoscale': bool,
    'interactive': bool,
    'lauger': bool,
    'lauger_eeh': bool,
    'lauger_ehh': bool,
    'lauger_collect': bool,
    'lauger_dhdk': bool,
    'lauger_jit': bool,
    'orbitalmag': bool,
    'lchimag': bool,
    'lwrtcur': bool,
    'lnmr_sym_red': bool,
    'lzora': bool,
    'lbone': bool,
    'lmagbloch': bool,
    'lgauge': bool,
    'lbfconst': bool,
    'nucind': bool,
    'lnicsall': bool,
    'llraug': bool,
    'lbbm': bool,
    'lnoncollinear': bool,
    'bfgsdfp': bool,
    'linemin': bool,
    'ldneborg': bool,
    'dseed': bool,
    'linteract': bool,
    'lmpmd': bool,
    'ltwodim': bool,
    'fmagflag': bool,
    'ltemper': bool,
    'qmflag': bool,
    'lmixtau': bool,
    'ljdftx': bool,
    'lrhob': bool,
    'lrhoion': bool,
    'lnabla': bool,
    'linterfast': bool,
    'lvel': bool,
    'lrpaforce': bool,
    'lhartree': bool,
    'ladder': bool,
    'lfxc': bool,
    'lrsrpa': bool,
    'lsingles': bool,
    'lfermigw': bool,
    'ltcte': bool,
    'ltete': bool,
    'ltriplet': bool,
    'lfxceps': bool,
    'lfxheg': bool,
    'l2order': bool,
    'lmp2lt': bool,
    'lgwlf': bool,
    'lusew': bool,
    'selfenergy': bool,
    'oddonlygw': bool,
    'evenonlygw': bool,
    'lspectralgw': bool,
    'ch_lspec': bool,
    'fletcher_reeves': bool,
    'lidm_selective': bool,
    'lblueout': bool,
    'hills_variable_w': bool,
    'dvvminus': bool,
    'lpead': bool,
    'skip_edotp': bool,
    'skip_scf': bool,
    'lchgfit': bool,
    'lgausrc': bool,
    'lstockholder': bool,
    'lsymgrad': bool,
    'lhfone': bool,
    'lrscor': bool,
    'lrhfcalc': bool,
    'lmodelhf': bool,
    'shiftred': bool,
    'hfkident': bool,
    'oddonly': bool,
    'evenonly': bool,
    'lfockaedft': bool,
    'lsubrot': bool,
    'mixfirst': bool,
    'lvcader': bool,
    'lcompat': bool,
    'lmusic': bool,
    'ldownsample': bool,
    'lscaaware': bool,
    'lorbitalreal': bool,
    'lmetagga': bool,
    'lspiral': bool,
    'lzeroz': bool,
    'lmono': bool,
    'lrelcore': bool,
    'lmimicfc': bool,
    'lmatchrw': bool,
    'ladaptelin': bool,
    'lonlysemicore': bool,
    'gga_compat': bool,
    'lrelvol': bool,
    'lj_only': bool,
    'lvdwscs': bool,
    'lcfdm': bool,
    'lvdw_sametype': bool,
    'lrescaler0': bool,
    'lscsgrad': bool,
    'lvdwexpansion': bool,
    'lvdw_relvolone': bool,
    'lberry': bool,
    'lpade_fit': bool,
    'lkproj': bool,
    'l_wr_moments': bool,
    'l_wr_density': bool,
    'lkotani': bool,
    'ldyson': bool,
    'laddherm': bool,
    'lcrpaplot': bool,
    'lplotdis': bool,
    'ldisentangle': bool,
    'lweighted': bool,
    'luseorth_lcaos': bool,
    'lfrpa': bool,
    'lregularize': bool,
    'ldrude': bool,
    'ldmatrix': bool,
    'lefg': bool,
    'lhyperfine': bool,
    'lwannier': bool,
    'localize': bool,
    'lintpol_wpot': bool,
    'lintpol_orb': bool,
    'lintpol_kpath': bool,
    'lintpol_kpath_orb': bool,
    'lread_eigenvalues': bool,
    'lintpol_velocity': bool,
    'lintpol_conductivity': bool,
    'lwannierinterpol': bool,
    'wanproj': bool,
    'lorbmom': bool,
    'lwannier90_run': bool,
    'lwrite_wanproj': bool,
    'lwrite_unk': bool,
    'lwrite_mmn_amn': bool,
    'lread_amn': bool,
    'lrhfatm': bool,
    'lvpot': bool,
    'lwpot': bool,
    'lwswq': bool,
    'pflat': bool,
    'qifcg': bool,
    'qdo_ins': bool,
    'qdo_pre': bool,
    'lnbo': bool,
}

array_pars = {}
array_pars['vasp'] = {
    # integers
    'iband': numpy.ndarray,
    'kpuse': numpy.ndarray,
    'ldaul': numpy.ndarray,
    'random_seed': numpy.ndarray,
    'auger_bmin_eeh': numpy.ndarray,
    'auger_bmax_eeh': numpy.ndarray,
    'auger_bmin_ehh': numpy.ndarray,
    'auger_bmax_ehh': numpy.ndarray,
    'balist': numpy.ndarray,
    'kpoint_bse': numpy.ndarray,
    'nsubsys': numpy.ndarray,
    'vdw_refstate': numpy.ndarray,
    'vdw_mbd_size': numpy.ndarray,
    'nbands_index': numpy.ndarray,
    'kpts_index': numpy.ndarray,
    'isp_index': numpy.ndarray,
    'nomega_index': numpy.ndarray,
    'ntarget_states': numpy.ndarray,
    'wanproj_i': numpy.ndarray,
    'wanproj_l': numpy.ndarray,
    # floats
    'dipol': numpy.ndarray,
    'eint': numpy.ndarray,
    'ferwe': numpy.ndarray,
    'ferdo': numpy.ndarray,
    'magmom': numpy.ndarray,
    'ropt': numpy.ndarray,
    'rwigs': numpy.ndarray,
    'ldauu': numpy.ndarray,
    'ldauj': numpy.ndarray,
    'vdw_c6': numpy.ndarray,
    'vdw_c6au': numpy.ndarray,
    'vdw_r0': numpy.ndarray,
    'vdw_r0au': numpy.ndarray,
    'vdw_alpha': numpy.ndarray,
    'langevin_gamma': numpy.ndarray,
    'psubsys': numpy.ndarray,
    'tsubsys': numpy.ndarray,
    # 'spring_k',  # units depend on the coordinate units
    # 'spring_r0',  # units depend on the coordinate units
    # 'spring_v0',  # units depend on the coordinate units
    'efield_pead': numpy.ndarray,
    'saxis': numpy.ndarray,
    'vca': numpy.ndarray,
    'qspiral': numpy.ndarray,
    'quad_efg': numpy.ndarray,
    'ngyromag': numpy.ndarray,
    'smearings': numpy.ndarray,
    # booleans
    'lattice_constraints': numpy.ndarray,
    'lrctype': numpy.ndarray,
    'lvdw_onecell': numpy.ndarray,
}

# turbomole calculator parameters

scalar_pars['turbomole'] = {
    'restart': bool,
    'define_str': str,
    'control_input': list,
    'control_kdg': list,
    'reset_tolerance': float,
    'automatic orbital shift': float,
    'basis set name': str,
    'closed-shell orbital shift': float,
    'damping adjustment step': float,
    'default eht atomic orbitals': bool,
    'density convergence': float,
    'density functional': str,
    'energy convergence': float,
    'esp fit': str,
    'fermi annealing factor': float,
    'fermi final temperature': float,
    'fermi homo-lumo gap criterion': float,
    'fermi initial temperature': float,
    'fermi stopping criterion': float,
    'force convergence': float,
    'geometry optimization iterations': int,
    'grid size': str,
    'ground state': bool,
    'initial damping': float,
    'initial guess': (str, dict),
    'minimal damping': float,
    'multiplicity': int,
    'non-automatic orbital shift': bool,
    'numerical hessian': dict,
    'point group': str,
    'ri memory': int,
    'rohf': bool,
    'scf energy convergence': float,
    'scf iterations': int,
    'task': str,
    'title': str,
    'total charge': int,
    'transition vector': int,
    'uhf': bool,
    'use basis set library': bool,
    'use dft': bool,
    'use fermi smearing': bool,
    'use redundant internals': bool,
    'use resolution of identity': bool,
}

array_pars['turbomole'] = {
    'basis set definition': dict
}

calc_pars = {}
calc_pars['vasp'] = {**scalar_pars['vasp'], **array_pars['vasp']}
calc_pars['turbomole'] = {**scalar_pars['turbomole'], **array_pars['turbomole']}

# name 'lj' as accepted by get_calculator_class()
calc_pars['lj'] = {
    'sigma': float,
    'epsilon': float,
    'rc': float,
    'ro': float,
    'smooth': bool}

# name 'lennardjones' as returned by lj.LennardJones().name
calc_pars['lennardjones'] = calc_pars['lj']

calc_pars['emt'] = {
    'restart': bool,
    'asap_cutoff': bool,
    'fixed_cutoff': bool
}

calc_pars['free_electrons'] = {
    'nvalence': int,
    'kpts': (numpy.ndarray, pandas.DataFrame),
    'npoints': int,
    'path': object
}

from typing import Iterable, TypeAlias

import pandas as pd

from epx.run.status import RunStatus, StatusName

RunStatusWithId: TypeAlias = tuple[int, RunStatus]


class JobStatus:
    def __init__(self, run_statuses_with_ids: Iterable[RunStatusWithId]):
        self._run_statuses_with_ids = run_statuses_with_ids

    @property
    def logs(self) -> pd.DataFrame:
        """Return a collection of log entries output by FRED.

        Returns
        -------
        pd.DataFrame
            Collection of individual log entries generated by FRED during the
            run.
        """
        log_cols = ["run_id", "level", "time", "message"]
        return pd.concat(
            run.logs.assign(run_id=run_id)
            for run_id, run in self._run_statuses_with_ids
        ).loc[:, log_cols]

    @property
    def name(self) -> StatusName:
        """Return a string summarizing the job status.

        Returns
        -------
        Status
            A string indicating the status of the job, one of: `"NOT STARTED"`,
            `"RUNNING"`, `"ERROR"`, or `"DONE"`.
        """
        status_names = set(run.name for _, run in self._run_statuses_with_ids)
        if all(sn == "NOT STARTED" for sn in status_names):
            return "NOT STARTED"
        if "ERROR" in status_names:
            return "ERROR"
        if "RUNNING" in status_names:
            return "RUNNING"
        return "DONE"

    def __repr__(self) -> str:
        return f"JobStatus({self._run_statuses_with_ids})"

    def __str__(self) -> str:
        return self.name

import mysql.connector
import time
import logging


def 连接数据库(主机, 用户名, 密码, 数据库名, 字符集='utf8mb4', 最大重试次数=30, 重试间隔=3):
    """
    连接到MySQL数据库并返回 连接对象, 游标对象。

    参数：
        - 主机：数据库主机名或IP地址。
        - 用户名：数据库用户名。
        - 密码：数据库密码。
        - 数据库名：要连接的数据库名。
        - 字符集：要使用的字符集（默认值为 'utf8mb4'，可同时兼容'utf8'）。
        - 最大重试次数：连接失败后最大重试次数（默认30次）。
        - 重试间隔：每次重试之间的等待时间（秒），默认值为3秒。

    返回值：
        - 连接对象：表示与数据库的连接。如果连接失败，则返回 None。
        - 游标对象：用于执行查询和获取结果。如果连接失败，则返回 None。

    使用示例（可以复制并直接修改）：
        连接对象, 游标对象 = zfx_mysql.连接数据库("127.0.0.1", "root", "root", "test", 字符集='utf8mb4', 30, 3)

        # 替换参数：
        #  - 主机：如 "localhost" 或 "127.0.0.1"
        #  - 用户名：数据库的登录用户名，如 "root"
        #  - 密码：登录用户的密码，如 "password"
        #  - 数据库名：需要连接的数据库名称，如 "test_db"
        #  - 字符集：可以不修改，默认值 'utf8mb4' 兼容 'utf8'
        #  - 最大重试次数：如有需要，可以设置为特定次数，如 30
        #  - 重试间隔：如有需要，可以设置为特定时间（秒），如 3
    """
    重试次数 = 0

    while 重试次数 < 最大重试次数:
        try:
            # 尝试连接到数据库
            连接对象 = mysql.connector.connect(
                host=主机,
                user=用户名,
                password=密码,
                database=数据库名,
                charset=字符集
            )

            # 创建游标对象
            游标对象 = 连接对象.cursor()

            # 如果成功连接，返回连接对象和游标对象
            return 连接对象, 游标对象

        except Exception as err:
            # 捕获所有异常并记录日志
            重试次数 += 1
            logging.warning(f"第 {重试次数} 次连接失败: {err}. 正在重试...")

        # 如果重试次数未达到最大值，等待指定的间隔时间
        if 重试次数 < 最大重试次数:
            time.sleep(重试间隔)
        else:
            logging.error("超过最大重试次数，连接失败。")
            break

    # 如果连接失败，返回 None
    return None, None

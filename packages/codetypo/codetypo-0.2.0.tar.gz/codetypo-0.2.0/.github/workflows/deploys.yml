name: Deploys

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Release Generator"]
    types:
      - completed

permissions:
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event }}
  cancel-in-progress: true

jobs:
  tagext:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Latest Tag
        id: tag_extractor
        run: |
          latest_tag=$(git describe --tags --abbrev=0)
          echo "latest_tag=${latest_tag}" >> "$GITHUB_OUTPUT"
          echo "latest_tag_2=${latest_tag:1}" >> "$GITHUB_OUTPUT"

  pypi:
    needs: tagext
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    environment: Deploys
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build and Publish Python Packages
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine build
          python -m build
          twine upload dist/*

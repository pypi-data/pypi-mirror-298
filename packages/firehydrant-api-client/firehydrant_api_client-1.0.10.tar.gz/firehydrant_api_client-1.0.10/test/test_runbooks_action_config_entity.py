# coding: utf-8

"""
    FireHydrant API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from firehydrant_api_client.models.runbooks_action_config_entity import RunbooksActionConfigEntity

class TestRunbooksActionConfigEntity(unittest.TestCase):
    """RunbooksActionConfigEntity unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RunbooksActionConfigEntity:
        """Test RunbooksActionConfigEntity
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RunbooksActionConfigEntity`
        """
        model = RunbooksActionConfigEntity()
        if include_optional:
            return RunbooksActionConfigEntity(
                elements = firehydrant_api_client.models.runbooks_element_entity.Runbooks_ElementEntity(
                    id = '', 
                    type = '', 
                    markdown = firehydrant_api_client.models.runbooks_element_markdown_entity.Runbooks_ElementMarkdownEntity(
                        text = '', ), 
                    textarea = firehydrant_api_client.models.runbooks_element_textarea_entity.Runbooks_ElementTextareaEntity(
                        label = '', 
                        placeholder = '', 
                        default_value = '', ), 
                    input = firehydrant_api_client.models.runbooks_element_input_entity.Runbooks_ElementInputEntity(
                        label = '', 
                        placeholder = '', 
                        default_value = '', 
                        required = True, ), 
                    plain_text = firehydrant_api_client.models.runbooks_element_markdown_entity.Runbooks_ElementMarkdownEntity(
                        text = '', ), 
                    dynamic_select = firehydrant_api_client.models.runbooks_element_dynamic_select_entity.Runbooks_ElementDynamicSelectEntity(
                        label = '', 
                        placeholder = '', 
                        async_url = '', 
                        required = True, 
                        clearable = True, 
                        is_multi = True, 
                        default_value = firehydrant_api_client.models.runbooks_element_dynamic_select_entity_select_option_entity.Runbooks_ElementDynamicSelectEntity_SelectOptionEntity(
                            label = '', 
                            value = '', ), 
                        options = [
                            firehydrant_api_client.models.runbooks_element_dynamic_select_entity_select_option_entity.Runbooks_ElementDynamicSelectEntity_SelectOptionEntity(
                                label = '', 
                                value = '', )
                            ], ), ),
                documentation_url = ''
            )
        else:
            return RunbooksActionConfigEntity(
        )
        """

    def testRunbooksActionConfigEntity(self):
        """Test RunbooksActionConfigEntity"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

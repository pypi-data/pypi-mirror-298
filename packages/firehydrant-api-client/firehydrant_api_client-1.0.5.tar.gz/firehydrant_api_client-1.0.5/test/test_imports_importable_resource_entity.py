# coding: utf-8

"""
    FireHydrant API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from firehydrant_api_client.models.imports_importable_resource_entity import ImportsImportableResourceEntity

class TestImportsImportableResourceEntity(unittest.TestCase):
    """ImportsImportableResourceEntity unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ImportsImportableResourceEntity:
        """Test ImportsImportableResourceEntity
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ImportsImportableResourceEntity`
        """
        model = ImportsImportableResourceEntity()
        if include_optional:
            return ImportsImportableResourceEntity(
                import_errors = [
                    firehydrant_api_client.models.imports_import_error_entity.Imports_ImportErrorEntity(
                        id = '', 
                        message = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        data = firehydrant_api_client.models.data.data(), 
                        resource = firehydrant_api_client.models.imports_import_error_entity_resource_entity.Imports_ImportErrorEntity_ResourceEntity(
                            resource_id = '', 
                            resource_type = '', 
                            name = '', ), )
                    ],
                imported_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                remote_id = '',
                state = 'selected'
            )
        else:
            return ImportsImportableResourceEntity(
        )
        """

    def testImportsImportableResourceEntity(self):
        """Test ImportsImportableResourceEntity"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

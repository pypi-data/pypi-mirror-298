# coding: utf-8

"""
    FireHydrant API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from firehydrant_api_client.models.incidents_alert_entity_paginated import IncidentsAlertEntityPaginated

class TestIncidentsAlertEntityPaginated(unittest.TestCase):
    """IncidentsAlertEntityPaginated unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IncidentsAlertEntityPaginated:
        """Test IncidentsAlertEntityPaginated
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IncidentsAlertEntityPaginated`
        """
        model = IncidentsAlertEntityPaginated()
        if include_optional:
            return IncidentsAlertEntityPaginated(
                data = [
                    firehydrant_api_client.models.incidents_alert_entity.Incidents_AlertEntity(
                        id = '', 
                        alert = firehydrant_api_client.models.alerts_alert_entity.Alerts_AlertEntity(
                            id = '', 
                            summary = '', 
                            description = '', 
                            priority = '', 
                            integration_name = '', 
                            starts_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            ends_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            duration_ms = 56, 
                            duration_iso8601 = '', 
                            status = '', 
                            remote_id = '', 
                            remote_url = '', 
                            labels = firehydrant_api_client.models.labels.labels(), 
                            environments = [
                                firehydrant_api_client.models.succinct_entity.SuccinctEntity(
                                    id = '', 
                                    name = '', )
                                ], 
                            services = [
                                firehydrant_api_client.models.succinct_entity.SuccinctEntity(
                                    id = '', 
                                    name = '', )
                                ], 
                            tags = [
                                ''
                                ], 
                            source_icon = '', 
                            signal_id = '', 
                            signal_rule = firehydrant_api_client.models.signals_api_rule_entity.Signals_API_RuleEntity(
                                id = '', 
                                name = '', 
                                expression = '', 
                                team_id = '', 
                                target = firehydrant_api_client.models.signals_api_target_entity.Signals_API_TargetEntity(
                                    id = '', 
                                    name = '', 
                                    type = '', 
                                    is_pageable = True, ), 
                                created_by = firehydrant_api_client.models.author_entity.AuthorEntity(
                                    id = '', 
                                    name = '', 
                                    source = '', 
                                    email = '', ), 
                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                incident_type = , 
                                notification_priority_override = 'HIGH', ), 
                            team_name = '', 
                            team_id = '', 
                            position = 56, 
                            incidents = [
                                firehydrant_api_client.models.public_api_v1_incidents_succinct_entity.PublicAPI_V1_Incidents_SuccinctEntity(
                                    id = '', 
                                    name = '', 
                                    number = '', )
                                ], 
                            events = [
                                firehydrant_api_client.models.alerts_siren_event_entity.Alerts_SirenEventEntity(
                                    id = '', 
                                    type = '', 
                                    data = firehydrant_api_client.models.data.data(), 
                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], 
                            is_expired = True, ), 
                        primary = True, )
                    ],
                pagination = firehydrant_api_client.models.pagination_entity.PaginationEntity(
                    count = 56, 
                    page = 56, 
                    items = 56, 
                    pages = 56, 
                    last = 56, 
                    prev = 56, 
                    next = 56, )
            )
        else:
            return IncidentsAlertEntityPaginated(
        )
        """

    def testIncidentsAlertEntityPaginated(self):
        """Test IncidentsAlertEntityPaginated"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

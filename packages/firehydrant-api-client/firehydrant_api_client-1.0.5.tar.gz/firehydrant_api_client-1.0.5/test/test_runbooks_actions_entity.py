# coding: utf-8

"""
    FireHydrant API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from firehydrant_api_client.models.runbooks_actions_entity import RunbooksActionsEntity

class TestRunbooksActionsEntity(unittest.TestCase):
    """RunbooksActionsEntity unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RunbooksActionsEntity:
        """Test RunbooksActionsEntity
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RunbooksActionsEntity`
        """
        model = RunbooksActionsEntity()
        if include_optional:
            return RunbooksActionsEntity(
                id = '',
                name = '',
                slug = '',
                description = '',
                config = firehydrant_api_client.models.runbooks_action_config_entity.Runbooks_ActionConfigEntity(
                    elements = firehydrant_api_client.models.runbooks_element_entity.Runbooks_ElementEntity(
                        id = '', 
                        type = '', 
                        markdown = firehydrant_api_client.models.runbooks_element_markdown_entity.Runbooks_ElementMarkdownEntity(
                            text = '', ), 
                        textarea = firehydrant_api_client.models.runbooks_element_textarea_entity.Runbooks_ElementTextareaEntity(
                            label = '', 
                            placeholder = '', 
                            default_value = '', ), 
                        input = firehydrant_api_client.models.runbooks_element_input_entity.Runbooks_ElementInputEntity(
                            label = '', 
                            placeholder = '', 
                            default_value = '', 
                            required = True, ), 
                        plain_text = firehydrant_api_client.models.runbooks_element_markdown_entity.Runbooks_ElementMarkdownEntity(
                            text = '', ), 
                        dynamic_select = firehydrant_api_client.models.runbooks_element_dynamic_select_entity.Runbooks_ElementDynamicSelectEntity(
                            label = '', 
                            placeholder = '', 
                            async_url = '', 
                            required = True, 
                            clearable = True, 
                            is_multi = True, 
                            default_value = firehydrant_api_client.models.runbooks_element_dynamic_select_entity_select_option_entity.Runbooks_ElementDynamicSelectEntity_SelectOptionEntity(
                                label = '', 
                                value = '', ), 
                            options = [
                                firehydrant_api_client.models.runbooks_element_dynamic_select_entity_select_option_entity.Runbooks_ElementDynamicSelectEntity_SelectOptionEntity(
                                    label = '', 
                                    value = '', )
                                ], ), ), 
                    documentation_url = '', ),
                category = '',
                prerequisites = firehydrant_api_client.models.prerequisites.prerequisites(),
                integration = firehydrant_api_client.models.integrations_integration_entity.Integrations_IntegrationEntity(
                    id = '', 
                    slug = '', 
                    name = '', 
                    description = '', 
                    setup_url = '', 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    connections = firehydrant_api_client.models.integrations_connection_entity.Integrations_ConnectionEntity(
                        id = '', 
                        integration_slug = '', 
                        integration_id = '', 
                        display_name = '', 
                        configuration_url = '', 
                        authorized_by = '', 
                        authorized_by_id = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        details = firehydrant_api_client.models.details.details(), 
                        default_authorized_actor = firehydrant_api_client.models.author_entity.AuthorEntity(
                            id = '', 
                            name = '', 
                            source = '', 
                            email = '', ), ), 
                    enabled = True, 
                    installed = True, 
                    deprecated = True, 
                    logo = firehydrant_api_client.models.integrations_integration_entity_logo_entity.Integrations_IntegrationEntity_LogoEntity(
                        logo_url = '', ), 
                    nat_ip = '', ),
                supported_runbook_types = [
                    ''
                    ],
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                automatable = True,
                rerunnable = True,
                repeatable = True,
                default_logic = firehydrant_api_client.models.default_logic.default_logic(),
                default_rule_data = firehydrant_api_client.models.default_rule_data.default_rule_data()
            )
        else:
            return RunbooksActionsEntity(
        )
        """

    def testRunbooksActionsEntity(self):
        """Test RunbooksActionsEntity"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

# coding: utf-8

"""
    FireHydrant API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from firehydrant_api_client.models.metrics_mttx_group_entity import MetricsMttxGroupEntity

class TestMetricsMttxGroupEntity(unittest.TestCase):
    """MetricsMttxGroupEntity unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MetricsMttxGroupEntity:
        """Test MetricsMttxGroupEntity
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MetricsMttxGroupEntity`
        """
        model = MetricsMttxGroupEntity()
        if include_optional:
            return MetricsMttxGroupEntity(
                group_attributes = '',
                filter_params = firehydrant_api_client.models.filter_params.filter_params(),
                count = 56,
                mttd = 1.337,
                mtta = 1.337,
                mttm = 1.337,
                mttr = 1.337,
                count_diff = 56,
                count_percent_diff = 1.337,
                mttd_diff = 1.337,
                mtta_diff = 1.337,
                mttm_diff = 1.337,
                mttr_diff = 1.337,
                mttd_percent_diff = 1.337,
                mtta_percent_diff = 1.337,
                mttm_percent_diff = 1.337,
                mttr_percent_diff = 1.337,
                healthiness = 1.337
            )
        else:
            return MetricsMttxGroupEntity(
        )
        """

    def testMetricsMttxGroupEntity(self):
        """Test MetricsMttxGroupEntity"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

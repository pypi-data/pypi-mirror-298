# coding: utf-8

"""
    FireHydrant API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from firehydrant_api_client.models.metrics_retrospective_entity import MetricsRetrospectiveEntity

class TestMetricsRetrospectiveEntity(unittest.TestCase):
    """MetricsRetrospectiveEntity unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MetricsRetrospectiveEntity:
        """Test MetricsRetrospectiveEntity
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MetricsRetrospectiveEntity`
        """
        model = MetricsRetrospectiveEntity()
        if include_optional:
            return MetricsRetrospectiveEntity(
                data = [
                    firehydrant_api_client.models.metrics_retrospective_entity_data_entity.Metrics_RetrospectiveEntity_DataEntity(
                        x = '', 
                        y = 1.337, )
                    ],
                summary = firehydrant_api_client.models.metrics_retrospective_entity_summary_entity.Metrics_RetrospectiveEntity_SummaryEntity(
                    completed = 56, 
                    total = 56, 
                    incomplete = 56, 
                    mean = 1.337, 
                    shortest = 1.337, 
                    longest = 1.337, 
                    completion_percentage = 1.337, )
            )
        else:
            return MetricsRetrospectiveEntity(
        )
        """

    def testMetricsRetrospectiveEntity(self):
        """Test MetricsRetrospectiveEntity"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

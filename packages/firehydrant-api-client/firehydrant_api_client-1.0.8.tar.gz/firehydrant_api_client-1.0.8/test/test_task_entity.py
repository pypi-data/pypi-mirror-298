# coding: utf-8

"""
    FireHydrant API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from firehydrant_api_client.models.task_entity import TaskEntity

class TestTaskEntity(unittest.TestCase):
    """TaskEntity unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TaskEntity:
        """Test TaskEntity
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TaskEntity`
        """
        model = TaskEntity()
        if include_optional:
            return TaskEntity(
                id = '',
                title = '',
                description = '',
                state = '',
                assignee = firehydrant_api_client.models.author_entity.AuthorEntity(
                    id = '', 
                    name = '', 
                    source = '', 
                    email = '', ),
                created_by = firehydrant_api_client.models.author_entity.AuthorEntity(
                    id = '', 
                    name = '', 
                    source = '', 
                    email = '', ),
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                due_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return TaskEntity(
        )
        """

    def testTaskEntity(self):
        """Test TaskEntity"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

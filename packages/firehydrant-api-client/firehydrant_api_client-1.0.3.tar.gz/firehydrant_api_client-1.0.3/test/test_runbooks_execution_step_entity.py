# coding: utf-8

"""
    FireHydrant API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from firehydrant_api_client.models.runbooks_execution_step_entity import RunbooksExecutionStepEntity

class TestRunbooksExecutionStepEntity(unittest.TestCase):
    """RunbooksExecutionStepEntity unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RunbooksExecutionStepEntity:
        """Test RunbooksExecutionStepEntity
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RunbooksExecutionStepEntity`
        """
        model = RunbooksExecutionStepEntity()
        if include_optional:
            return RunbooksExecutionStepEntity(
                id = '',
                name = '',
                action_slug = '',
                action_type = '',
                integration_name = '',
                integration_slug = '',
                automatic = True,
                config = firehydrant_api_client.models.config.config(),
                step_elements = [
                    None
                    ],
                executable = True,
                repeats = True,
                repeats_duration = '',
                repeats_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                has_been_rerun = True,
                has_been_retried = True,
                execution = firehydrant_api_client.models.runbooks_execution_step_execution_entity.Runbooks_ExecutionStepExecutionEntity(
                    state = 'initial', 
                    data = firehydrant_api_client.models.data.data(), 
                    performed_by = firehydrant_api_client.models.actor_entity.ActorEntity(
                        id = '', 
                        name = '', 
                        email = '', 
                        type = 'firehydrant_user', ), 
                    performed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    scheduled_for = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    error = '', 
                    webhook_delivery = firehydrant_api_client.models.runbooks_webhook_delivery_entity.Runbooks_WebhookDeliveryEntity(
                        headers = '', 
                        status_code = '', ), ),
                repeatable = True,
                rule = firehydrant_api_client.models.rules_rule_entity.Rules_RuleEntity(
                    logic = firehydrant_api_client.models.logic.logic(), 
                    user_data = firehydrant_api_client.models.fh_types_generic_entity.FHTypes_GenericEntity(
                        type = '', 
                        value = '', 
                        label = '', ), )
            )
        else:
            return RunbooksExecutionStepEntity(
        )
        """

    def testRunbooksExecutionStepEntity(self):
        """Test RunbooksExecutionStepEntity"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

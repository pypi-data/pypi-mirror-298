# coding: utf-8

"""
    FireHydrant API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from firehydrant_api_client.api.runbooks_api import RunbooksApi


class TestRunbooksApi(unittest.TestCase):
    """RunbooksApi unit test stubs"""

    def setUp(self) -> None:
        self.api = RunbooksApi()

    def tearDown(self) -> None:
        pass

    def test_delete_v1_runbooks_executions_execution_id(self) -> None:
        """Test case for delete_v1_runbooks_executions_execution_id

        Terminate a runbook execution
        """
        pass

    def test_delete_v1_runbooks_runbook_id(self) -> None:
        """Test case for delete_v1_runbooks_runbook_id

        Delete a runbook
        """
        pass

    def test_get_v1_runbooks(self) -> None:
        """Test case for get_v1_runbooks

        List runbooks
        """
        pass

    def test_get_v1_runbooks_actions(self) -> None:
        """Test case for get_v1_runbooks_actions

        List all Runbook actions
        """
        pass

    def test_get_v1_runbooks_executions(self) -> None:
        """Test case for get_v1_runbooks_executions

        List all executions of Runbooks
        """
        pass

    def test_get_v1_runbooks_executions_execution_id(self) -> None:
        """Test case for get_v1_runbooks_executions_execution_id

        Retrieve a runbook execution
        """
        pass

    def test_get_v1_runbooks_executions_execution_id_steps_step_id_script(self) -> None:
        """Test case for get_v1_runbooks_executions_execution_id_steps_step_id_script

        Retrieves the bash script from a \"script\" step.
        """
        pass

    def test_get_v1_runbooks_executions_execution_id_steps_step_id_votes_status(self) -> None:
        """Test case for get_v1_runbooks_executions_execution_id_steps_step_id_votes_status

        Returns the current vote counts for an object
        """
        pass

    def test_get_v1_runbooks_executions_execution_id_votes_status(self) -> None:
        """Test case for get_v1_runbooks_executions_execution_id_votes_status

        Returns the current vote counts for an object
        """
        pass

    def test_get_v1_runbooks_runbook_id(self) -> None:
        """Test case for get_v1_runbooks_runbook_id

        Retrieve a runbook
        """
        pass

    def test_get_v1_runbooks_select_options_integration_slug_action_slug_field(self) -> None:
        """Test case for get_v1_runbooks_select_options_integration_slug_action_slug_field

        """
        pass

    def test_patch_v1_runbooks_executions_execution_id_steps_step_id_votes(self) -> None:
        """Test case for patch_v1_runbooks_executions_execution_id_steps_step_id_votes

        Update the votes on an object
        """
        pass

    def test_patch_v1_runbooks_executions_execution_id_votes(self) -> None:
        """Test case for patch_v1_runbooks_executions_execution_id_votes

        Update the votes on an object
        """
        pass

    def test_post_v1_runbooks(self) -> None:
        """Test case for post_v1_runbooks

        Create a runbook
        """
        pass

    def test_post_v1_runbooks_executions(self) -> None:
        """Test case for post_v1_runbooks_executions

        Create a runbook execution
        """
        pass

    def test_put_v1_runbooks_executions_execution_id_steps_step_id(self) -> None:
        """Test case for put_v1_runbooks_executions_execution_id_steps_step_id

        Updates a runbook step execution
        """
        pass

    def test_put_v1_runbooks_executions_execution_id_steps_step_id_script_state(self) -> None:
        """Test case for put_v1_runbooks_executions_execution_id_steps_step_id_script_state

        Updates the execution's step.
        """
        pass

    def test_put_v1_runbooks_runbook_id(self) -> None:
        """Test case for put_v1_runbooks_runbook_id

        Update a runbook
        """
        pass


if __name__ == '__main__':
    unittest.main()

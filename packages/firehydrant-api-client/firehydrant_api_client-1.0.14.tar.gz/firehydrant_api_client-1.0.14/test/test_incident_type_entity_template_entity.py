# coding: utf-8

"""
    FireHydrant API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from firehydrant_api_client.models.incident_type_entity_template_entity import IncidentTypeEntityTemplateEntity

class TestIncidentTypeEntityTemplateEntity(unittest.TestCase):
    """IncidentTypeEntityTemplateEntity unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IncidentTypeEntityTemplateEntity:
        """Test IncidentTypeEntityTemplateEntity
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IncidentTypeEntityTemplateEntity`
        """
        model = IncidentTypeEntityTemplateEntity()
        if include_optional:
            return IncidentTypeEntityTemplateEntity(
                incident_name = '',
                summary = '',
                description = '',
                customer_impact_summary = '',
                labels = firehydrant_api_client.models.labels.labels(),
                severity = '',
                priority = '',
                tag_list = [
                    ''
                    ],
                runbook_ids = [
                    ''
                    ],
                team_ids = [
                    ''
                    ],
                private_incident = True,
                custom_fields = '',
                impacts = [
                    firehydrant_api_client.models.incident_type_entity_template_impact_entity.IncidentTypeEntity_TemplateImpactEntity(
                        id = '', 
                        name = '', 
                        condition_id = '', 
                        condition_name = '', 
                        type = 'environment', )
                    ]
            )
        else:
            return IncidentTypeEntityTemplateEntity(
        )
        """

    def testIncidentTypeEntityTemplateEntity(self):
        """Test IncidentTypeEntityTemplateEntity"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

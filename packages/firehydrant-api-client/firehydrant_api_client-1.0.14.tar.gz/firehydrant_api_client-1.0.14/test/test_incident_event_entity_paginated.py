# coding: utf-8

"""
    FireHydrant API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from firehydrant_api_client.models.incident_event_entity_paginated import IncidentEventEntityPaginated

class TestIncidentEventEntityPaginated(unittest.TestCase):
    """IncidentEventEntityPaginated unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IncidentEventEntityPaginated:
        """Test IncidentEventEntityPaginated
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IncidentEventEntityPaginated`
        """
        model = IncidentEventEntityPaginated()
        if include_optional:
            return IncidentEventEntityPaginated(
                data = [
                    firehydrant_api_client.models.incident_event_entity.IncidentEventEntity(
                        id = '', 
                        incident_id = '', 
                        type = '', 
                        context = '', 
                        data = firehydrant_api_client.models.data.data(), 
                        occurred_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        visibility = 'private_to_org', 
                        author = firehydrant_api_client.models.author_entity.AuthorEntity(
                            id = '', 
                            name = '', 
                            source = '', 
                            email = '', ), 
                        votes = firehydrant_api_client.models.votes_entity.VotesEntity(
                            voted = True, 
                            liked = True, 
                            disliked = True, 
                            likes = 56, 
                            dislikes = 56, ), 
                        conversations = [
                            firehydrant_api_client.models.conversations_api_entities_reference.Conversations_API_Entities_Reference(
                                id = '', 
                                resource_class = '', 
                                resource_id = '', 
                                field = '', 
                                comments_url = '', 
                                channel = firehydrant_api_client.models.conversations_api_entities_channel.Conversations_API_Entities_Channel(
                                    name = '', ), )
                            ], )
                    ],
                pagination = firehydrant_api_client.models.pagination_entity.PaginationEntity(
                    count = 56, 
                    page = 56, 
                    items = 56, 
                    pages = 56, 
                    last = 56, 
                    prev = 56, 
                    next = 56, )
            )
        else:
            return IncidentEventEntityPaginated(
        )
        """

    def testIncidentEventEntityPaginated(self):
        """Test IncidentEventEntityPaginated"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

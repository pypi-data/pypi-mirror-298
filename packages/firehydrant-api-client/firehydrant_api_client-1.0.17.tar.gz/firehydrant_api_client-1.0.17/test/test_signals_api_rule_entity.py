# coding: utf-8

"""
    FireHydrant API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from firehydrant_api_client.models.signals_api_rule_entity import SignalsAPIRuleEntity

class TestSignalsAPIRuleEntity(unittest.TestCase):
    """SignalsAPIRuleEntity unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SignalsAPIRuleEntity:
        """Test SignalsAPIRuleEntity
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SignalsAPIRuleEntity`
        """
        model = SignalsAPIRuleEntity()
        if include_optional:
            return SignalsAPIRuleEntity(
                id = '',
                name = '',
                expression = '',
                team_id = '',
                target = firehydrant_api_client.models.signals_api_target_entity.Signals_API_TargetEntity(
                    id = '', 
                    name = '', 
                    type = '', 
                    is_pageable = True, ),
                created_by = firehydrant_api_client.models.author_entity.AuthorEntity(
                    id = '', 
                    name = '', 
                    source = '', 
                    email = '', ),
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                incident_type = firehydrant_api_client.models.succinct_entity.SuccinctEntity(
                    id = '', 
                    name = '', ),
                notification_priority_override = 'HIGH'
            )
        else:
            return SignalsAPIRuleEntity(
        )
        """

    def testSignalsAPIRuleEntity(self):
        """Test SignalsAPIRuleEntity"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

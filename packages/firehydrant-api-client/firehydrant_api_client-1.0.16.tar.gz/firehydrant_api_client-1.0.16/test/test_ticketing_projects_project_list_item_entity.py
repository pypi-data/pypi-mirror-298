# coding: utf-8

"""
    FireHydrant API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from firehydrant_api_client.models.ticketing_projects_project_list_item_entity import TicketingProjectsProjectListItemEntity

class TestTicketingProjectsProjectListItemEntity(unittest.TestCase):
    """TicketingProjectsProjectListItemEntity unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TicketingProjectsProjectListItemEntity:
        """Test TicketingProjectsProjectListItemEntity
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TicketingProjectsProjectListItemEntity`
        """
        model = TicketingProjectsProjectListItemEntity()
        if include_optional:
            return TicketingProjectsProjectListItemEntity(
                id = '',
                name = '',
                config = firehydrant_api_client.models.ticketing_project_config_entity.Ticketing_ProjectConfigEntity(
                    id = '', 
                    connection_id = '', 
                    connection_type = '', 
                    ticketing_project_id = '', 
                    ticketing_project_name = '', 
                    details = firehydrant_api_client.models.details.details(), ),
                field_map = firehydrant_api_client.models.ticketing_project_field_map_entity.Ticketing_ProjectFieldMapEntity(
                    id = '', 
                    connection_id = '', 
                    connection_type = '', 
                    ticketing_project_id = '', 
                    body = [
                        firehydrant_api_client.models.ticketing_project_field_map_body_entity.Ticketing_ProjectFieldMapBodyEntity(
                            strategy = 'basic', 
                            external_field = '', 
                            external_value = firehydrant_api_client.models.ticketing_project_field_map_external_value_entity.Ticketing_ProjectFieldMapExternalValueEntity(
                                type = 'literal', 
                                value = '', 
                                attribute = '', 
                                presentation = '', ), 
                            user_data = firehydrant_api_client.models.user_data.user_data(), 
                            cases = [
                                firehydrant_api_client.models.ticketing_project_field_map_cases_entity.Ticketing_ProjectFieldMapCasesEntity(
                                    logic = firehydrant_api_client.models.logic.logic(), )
                                ], 
                            else = firehydrant_api_client.models.ticketing_project_field_map_cases_else_entity.Ticketing_ProjectFieldMapCasesElseEntity(), )
                        ], ),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                connection_slug = ''
            )
        else:
            return TicketingProjectsProjectListItemEntity(
        )
        """

    def testTicketingProjectsProjectListItemEntity(self):
        """Test TicketingProjectsProjectListItemEntity"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

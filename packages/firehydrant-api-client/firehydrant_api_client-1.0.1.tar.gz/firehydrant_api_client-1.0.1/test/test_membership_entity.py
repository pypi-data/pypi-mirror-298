# coding: utf-8

"""
    FireHydrant API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from firehydrant_api_client.models.membership_entity import MembershipEntity

class TestMembershipEntity(unittest.TestCase):
    """MembershipEntity unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MembershipEntity:
        """Test MembershipEntity
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MembershipEntity`
        """
        model = MembershipEntity()
        if include_optional:
            return MembershipEntity(
                user = firehydrant_api_client.models.user_entity.UserEntity(
                    id = '', 
                    name = '', 
                    email = '', 
                    slack_user_id = '', 
                    slack_linked? = True, 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                schedule = firehydrant_api_client.models.schedule_entity.ScheduleEntity(
                    id = '', 
                    name = '', 
                    integration = '', 
                    discarded = True, ),
                default_incident_role = firehydrant_api_client.models.incident_role_entity.IncidentRoleEntity(
                    id = '', 
                    name = '', 
                    summary = '', 
                    description = '', 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    discarded_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
            )
        else:
            return MembershipEntity(
        )
        """

    def testMembershipEntity(self):
        """Test MembershipEntity"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

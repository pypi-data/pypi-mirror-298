# coding: utf-8

"""
    FireHydrant API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from firehydrant_api_client.models.patch_v1_functionalities_functionality_id import PatchV1FunctionalitiesFunctionalityId

class TestPatchV1FunctionalitiesFunctionalityId(unittest.TestCase):
    """PatchV1FunctionalitiesFunctionalityId unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PatchV1FunctionalitiesFunctionalityId:
        """Test PatchV1FunctionalitiesFunctionalityId
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PatchV1FunctionalitiesFunctionalityId`
        """
        model = PatchV1FunctionalitiesFunctionalityId()
        if include_optional:
            return PatchV1FunctionalitiesFunctionalityId(
                name = '',
                description = '',
                services = [
                    firehydrant_api_client.models.patch_v1_functionalities_functionality_id_services_inner.patchV1FunctionalitiesFunctionalityId_services_inner(
                        id = '', 
                        remove = True, )
                    ],
                links = [
                    firehydrant_api_client.models.patch_v1_services_service_id_links_inner.patchV1ServicesServiceId_links_inner(
                        href_url = '', 
                        name = '', 
                        icon_url = '', 
                        remove = True, 
                        id = '', )
                    ],
                owner = firehydrant_api_client.models.patch_v1_functionalities_functionality_id_owner.patchV1FunctionalitiesFunctionalityId_owner(
                    id = '', ),
                remove_owner = True,
                teams = [
                    firehydrant_api_client.models.patch_v1_functionalities_functionality_id_teams_inner.patchV1FunctionalitiesFunctionalityId_teams_inner(
                        id = '', 
                        remove = True, )
                    ],
                remove_remaining_teams = True,
                external_resources = [
                    firehydrant_api_client.models.patch_v1_functionalities_functionality_id_external_resources_inner.patchV1FunctionalitiesFunctionalityId_external_resources_inner(
                        remote_id = '', 
                        connection_type = '', 
                        remove = True, )
                    ],
                remove_remaining_external_resources = True,
                labels = {
                    'key' : ''
                    },
                alert_on_add = True,
                auto_add_responding_team = True,
                remove_remaining_services = True
            )
        else:
            return PatchV1FunctionalitiesFunctionalityId(
        )
        """

    def testPatchV1FunctionalitiesFunctionalityId(self):
        """Test PatchV1FunctionalitiesFunctionalityId"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()

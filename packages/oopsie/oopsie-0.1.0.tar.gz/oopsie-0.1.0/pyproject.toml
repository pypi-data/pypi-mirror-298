[project]
name = "oopsie"
version = "0.1.0"
description = "Suggest corrections for failed CLI commands"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "click>=8.1.7",
    "inquirer>=3.4.0",
]
authors = [
    { name = "Cal Jacobson", email = "cj81499@users.noreply.github.com" },
]
maintainers = [
    { name = "Cal Jacobson", email = "cj81499@users.noreply.github.com" },
]

[project.scripts]
oopsie = "oopsie._cli:main"

[tool.uv]
dev-dependencies = [
    "mypy>=1.11.2",
    "pre-commit>=3.8.0",
    "pytest>=8.3.3",
    "ruff>=0.6.5",
]

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py310"

[tool.ruff.lint]
select = [
    "F",     # Pyflakes
    "E",     # pycodestyle
    "W",     # pycodestyle
    "C90",   # mccabe
    "I",     # isort
    "N",     # pep8-naming
    "D",     # pydocstyle
    "UP",    # pyupgrade
    "YTT",   # flake8-2020
    "ANN",   # flake8-annotations
    "ASYNC", # flake8-async
    "S",     # flake8-bandit
    "BLE",   # flake8-blind-except
    "FBT",   # flake8-boolean-trap
    "B",     # flake8-bugbear
    "A",     # flake8-builtins
    "COM",   # flake8-commas
    # "CPY",   # flake8-copyright - preview
    "C4",   # flake8-comprehensions
    "DTZ",  # flake8-datetimez
    "T10",  # flake8-debugger
    "DJ",   # flake8-django
    "EM",   # flake8-errmsg
    "EXE",  # flake8-executable
    "FA",   # flake8-future-annotations
    "ISC",  # flake8-implicit-str-concat
    "ICN",  # flake8-import-conventions
    "LOG",  # flake8-logging
    "G",    # flake8-logging-format
    "INP",  # flake8-no-pep420
    "PIE",  # flake8-pie
    "T20",  # flake8-print
    "PYI",  # flake8-pyi
    "PT",   # flake8-pytest-style
    "Q",    # flake8-quotes
    "RSE",  # flake8-raise
    "RET",  # flake8-return
    "SLF",  # flake8-self
    "SLOT", # flake8-slots
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "TCH",  # flake8-type-checking
    "INT",  # flake8-gettext
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib
    "TD",   # flake8-todos
    # "FIX",  # flake8-fixme - allow TODO/HACK comments
    "ERA", # eradicate
    "PD",  # pandas-vet
    "PGH", # pygrep-hooks
    "PL",  # Pylint
    "TRY", # tryceratops
    "FLY", # flynt
    "NPY", # NumPy-specific rules
    # "FAST", # FastAPI- preview
    "AIR",  # Airflow
    "PERF", # Perflint
    "FURB", # refurb
    # "DOC",  # pydoclint - preview
    "RUF", # Ruff-specific rules
]
ignore = [
    "D212",   # multi-line-summary-first-line - conflicts with D213 (multi-line-summary-second-line)
    "D203",   # one-blank-line-before-class - conflicts with D211 (blank-line-before-class)
    "COM812", # missing-trailing-comma - handled by formatter
    "ISC001", # single-line-implicit-string-concatenation - handled by formatter
    "ANN101", # missing-type-self - deprecated
    "ANN102", # missing-type-cls - deprecated
    "PT004",  # pytest-missing-fixture-name-underscore - deprecated
    "PT005",  # pytest-incorrect-fixture-name-underscore - deprecated
    "TD002",  # missing-todo-author
    "TD003",  # missing-todo-link
]

[tool.ruff.lint.per-file-ignores]
"test/**" = [
    "D",      # pydocstyle - docs are not required for tests
    "S101",   # assert - allow for pytest
    "INP001", # implicit-namespace-package
]

[tool.mypy]
mypy_path = "$MYPY_CONFIG_FILE_DIR/typings"
# https://mypy.readthedocs.io/en/stable/command_line.html#miscellaneous-strictness-flags
allow_redefinition = true
no_implicit_reexport = true
strict = true
# https://mypy.readthedocs.io/en/stable/command_line.html#configuring-error-messages
show_column_numbers = true
# https://mypy.readthedocs.io/en/stable/command_line.html#enabling-incomplete-experimental-features
enable_incomplete_feature = [
    "NewGenericSyntax",
    "PreciseTupleTypes",
]

[tool.pyright]
typeCheckingMode = "strict"

[tool.pytest.ini_options]
addopts = ["--import-mode=importlib"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

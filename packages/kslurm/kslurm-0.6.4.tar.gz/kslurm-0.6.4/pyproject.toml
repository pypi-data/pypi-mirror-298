[tool.poetry]
name = "kslurm"
version = "0.6.4"
description = "Helper scripts and wrappers for running commands on SLURM compute clusters."
license = "MIT"
readme = "README.md"
authors = ["Peter Van Dyken <pvandyk2@uwo.ca>"]
repository = "https://github.com/pvandyken/kslurm"
keywords = ["slurm", "compute cluster"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Topic :: Utilities",
    "Typing :: Typed"
]
packages = [
    { include = "kslurm" },
    { include = "neuroglia_helpers" }
]

[tool.poetry-dynamic-versioning]
enable = false
vcs = "git"
dirty = true
style = "pep440"
bump = true


[tool.poetry.dependencies]
python = ">=3.9,<4.0"
attrs = "^21.2.0"
colorama = "^0.4.4"
typing-extensions = ">=3.10"
rich = "^12.2.0"
tabulate = "^0.8.9"
semver = "^2.13.0"
appdirs = "^1.4.4"
shellingham = "^1.4.0"
virtualenv = ">=20.0.24,<21"
docstring-parser = "^0.14.1"
InquirerPy = "^0.3.3"
more-itertools = "^8.13.0"
requests = "^2.27.1"
flake8 = "^4.0.1"
yaspin = "^2.2.0"
Pint = "^0.19.2"

[tool.poetry.dev-dependencies]
black = "^22.3.0"
pytest = "^7.1.1"
tox = "^3.24.3"
coverage = "^6.3"
tox-poetry-installer = {extras = ["poetry"], version = "^0.8.1"}
hypothesis = "^6.20.0"
isort = "^5.9.3"
mkinit = "^0.3.3"
poethepoet = "^0.13.0"
pyfakefs = "^4.5.1"
pytest-mock = "^3.6.1"
pre-commit = "^2.15.0"

[tool.poetry.scripts]
kbatch = 'kslurm.cli.kbatch:kbatch.cli'
krun = 'kslurm.cli.krun:krun.cli'
kjupyter = 'kslurm.cli.kjupyter:kjupyter.cli'
kslurm = 'kslurm.cli.main:main.cli'
kpy = 'kslurm.cli.kpy:kpy.cli'
kapp = 'kslurm.cli.kapp.main:kapp.cli'

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.isort]
profile = "black"
multi_line_output = 3
add_imports = ["from __future__ import absolute_import"]
# We ignore __init__ file so that mkinit and isort don't undo each other
extend_skip = ["__init__.py", "neuroglia_helpers"]

[tool.pyright]
strict = ["kslurm/**"]
include = ["kslurm"]
exclude = ["kslurm/test/", "**/__pycache__", "**/node_modules", ".git"]
venv = ".venv"
useLibraryCodeForTypes = true

[tool.black]
extend-exclude = '^/(typings|neuroglia_helpers)/.*$'
extend-include = ["kslurm/.*$"]

[tool.poe.tasks]
setup = "pre-commit install"
quality = { shell = "isort kslurm && black kslurm && flake8 kslurm" }
mkinit = "mkinit --recursive --nomods --black -i kslurm"
check_mkinit = "mkinit --recursive --nomods --black --diff kslurm"
test = "tox"

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py39, py310
isolated_build = True

[gh-actions]
python =
    3.9: py39

[testenv]
require_locked_deps = true
locked_deps =
    pytest
    coverage
    hypothesis
    pyfakefs
    pytest-mock
commands =
    pytest
"""

[project]
name = "WhipPyWeb"
dynamic = ["version"]
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
authors = [{ name = "PaweÅ‚ Kucmus", email = "pkucmus@gmail.com" }]
license = { file = "LICENSE" }
dependencies = [
    "aiortc~=1.9.0",
    "click~=8.1",
    "rich~=13.8",
    "starlette~=0.38",
    "uvicorn~=0.30",
    "websockets~=13.1",
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
]


[project.urls]
Issues = "https://github.com/pkucmus/whipweb/issues"
Source = "https://github.com/pkucmus/whipweb"

[project.scripts]
whippyweb = "whipweb.cli:cli"

[project.optional-dependencies]
dev = ["ipdb", "ruff"]
test = ["pytest-asyncio", "pytest-cov", "coverage[toml]"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/whipweb"]

[tool.hatch.build.targets.sdist]
packages = ["src/whipweb"]

[tool.hatch.version]
path = "src/whipweb/__about__.py"
[tool.hatch.envs.default]
features = ["dev", "test"]

[tool.hatch.envs.default.scripts]
check = ["hatch fmt"]

## Types environment

[tool.hatch.envs.types]
extra-dependencies = ["mypy>=1.0.0"]

[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/whipweb tests}"

## Test environment

[tool.hatch.envs.hatch-test]
extra-dependencies = [
    "asynctest",
    "ipdb",
    "pytest-asyncio",
    "pytest-cov",
    "coverage[toml]",
]

[[tool.hatch.envs.hatch-test.matrix]]
python = ["3.9", "3.10", "3.11", "3.12"]

## Coverage environment

[tool.hatch.envs.cov]
detached = true
dependencies = ["coverage[toml]"]

[tool.hatch.envs.cov.scripts]
combine = "coverage combine {args}"
html = "coverage html"
xml = "coverage xml"

# Tool configuration

## Pytest configuration

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

## Coverage configuration

[tool.coverage.run]
source_pkgs = ["whipweb", "tests"]
branch = true
parallel = true

[tool.coverage.paths]
whipweb = ["src/whipweb"]
tests = ["tests"]

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstract",
]
omit = ["*/__about__.py", "*/__main__.py", "*/cli/__init__.py"]
fail_under = 90

## Ruff configuration

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 80

[tool.ruff.lint]
select = ["E", "F", "G", "I", "N", "Q", "UP", "C90", "T20", "TID"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.isort]
known-first-party = ["whipweb"]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

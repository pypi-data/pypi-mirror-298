# Generated from ../flash_patcher/antlr_source/PatchfileLexer.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,30,442,6,-1,6,-1,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
        4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,
        2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,
        7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,
        2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,
        7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,
        2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,
        7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,
        2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,
        7,57,2,58,7,58,2,59,7,59,2,60,7,60,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,
        3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,
        4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,
        6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,
        7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,
        9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,3,
        9,230,8,9,1,9,4,9,233,8,9,11,9,12,9,234,1,9,1,9,1,9,1,9,1,9,1,9,
        1,9,1,9,1,9,1,9,1,9,1,9,3,9,249,8,9,1,10,1,10,1,10,1,10,1,10,1,10,
        1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,
        1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,
        1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,14,1,14,
        1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,
        1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,
        1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,34,
        1,34,1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,39,1,40,1,40,
        1,41,1,41,1,42,1,42,1,43,1,43,1,44,1,44,1,45,1,45,1,46,1,46,1,47,
        4,47,361,8,47,11,47,12,47,362,1,48,1,48,1,49,1,49,1,50,1,50,1,51,
        1,51,1,51,1,51,1,51,1,52,4,52,377,8,52,11,52,12,52,378,1,53,4,53,
        382,8,53,11,53,12,53,383,1,53,1,53,1,54,1,54,5,54,390,8,54,10,54,
        12,54,393,9,54,1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,
        1,55,1,55,1,55,1,55,1,56,4,56,410,8,56,11,56,12,56,411,1,57,1,57,
        1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,58,
        4,58,429,8,58,11,58,12,58,430,1,59,1,59,1,59,1,59,1,59,1,60,4,60,
        439,8,60,11,60,12,60,440,3,234,411,430,0,61,4,1,6,2,8,3,10,4,12,
        5,14,6,16,7,18,8,20,9,22,10,24,11,26,12,28,13,30,14,32,15,34,16,
        36,0,38,0,40,0,42,0,44,0,46,0,48,0,50,0,52,0,54,0,56,0,58,0,60,0,
        62,0,64,0,66,0,68,0,70,0,72,0,74,0,76,0,78,0,80,0,82,0,84,0,86,0,
        88,0,90,0,92,0,94,0,96,0,98,17,100,18,102,19,104,20,106,21,108,22,
        110,23,112,24,114,25,116,26,118,27,120,28,122,29,124,30,4,0,1,2,
        3,33,2,0,65,65,97,97,2,0,66,66,98,98,2,0,67,67,99,99,2,0,68,68,100,
        100,2,0,69,69,101,101,2,0,70,70,102,102,2,0,71,71,103,103,2,0,72,
        72,104,104,2,0,73,73,105,105,2,0,74,74,106,106,2,0,75,75,107,107,
        2,0,76,76,108,108,2,0,77,77,109,109,2,0,78,78,110,110,2,0,79,79,
        111,111,2,0,80,80,112,112,2,0,81,81,113,113,2,0,82,82,114,114,2,
        0,83,83,115,115,2,0,84,84,116,116,2,0,85,85,117,117,2,0,86,86,118,
        118,2,0,87,87,119,119,2,0,88,88,120,120,2,0,89,89,121,121,2,0,90,
        90,122,122,2,0,65,90,97,122,1,0,48,57,2,0,47,47,92,92,6,0,10,10,
        13,13,32,32,34,34,45,45,61,61,3,0,9,10,12,13,32,32,2,0,10,10,13,
        13,3,0,10,10,13,13,34,34,417,0,4,1,0,0,0,0,6,1,0,0,0,0,8,1,0,0,0,
        0,10,1,0,0,0,0,12,1,0,0,0,0,14,1,0,0,0,0,16,1,0,0,0,0,18,1,0,0,0,
        0,20,1,0,0,0,0,22,1,0,0,0,0,24,1,0,0,0,0,26,1,0,0,0,0,28,1,0,0,0,
        0,30,1,0,0,0,0,32,1,0,0,0,0,34,1,0,0,0,0,98,1,0,0,0,0,100,1,0,0,
        0,0,102,1,0,0,0,0,104,1,0,0,0,0,106,1,0,0,0,0,108,1,0,0,0,0,110,
        1,0,0,0,0,112,1,0,0,0,1,114,1,0,0,0,1,116,1,0,0,0,2,118,1,0,0,0,
        2,120,1,0,0,0,3,122,1,0,0,0,3,124,1,0,0,0,4,126,1,0,0,0,6,130,1,
        0,0,0,8,140,1,0,0,0,10,147,1,0,0,0,12,155,1,0,0,0,14,167,1,0,0,0,
        16,175,1,0,0,0,18,186,1,0,0,0,20,198,1,0,0,0,22,248,1,0,0,0,24,250,
        1,0,0,0,26,264,1,0,0,0,28,280,1,0,0,0,30,289,1,0,0,0,32,293,1,0,
        0,0,34,295,1,0,0,0,36,297,1,0,0,0,38,299,1,0,0,0,40,301,1,0,0,0,
        42,303,1,0,0,0,44,305,1,0,0,0,46,307,1,0,0,0,48,309,1,0,0,0,50,311,
        1,0,0,0,52,313,1,0,0,0,54,315,1,0,0,0,56,317,1,0,0,0,58,319,1,0,
        0,0,60,321,1,0,0,0,62,323,1,0,0,0,64,325,1,0,0,0,66,327,1,0,0,0,
        68,329,1,0,0,0,70,331,1,0,0,0,72,333,1,0,0,0,74,335,1,0,0,0,76,337,
        1,0,0,0,78,339,1,0,0,0,80,341,1,0,0,0,82,343,1,0,0,0,84,345,1,0,
        0,0,86,347,1,0,0,0,88,349,1,0,0,0,90,351,1,0,0,0,92,353,1,0,0,0,
        94,355,1,0,0,0,96,357,1,0,0,0,98,360,1,0,0,0,100,364,1,0,0,0,102,
        366,1,0,0,0,104,368,1,0,0,0,106,370,1,0,0,0,108,376,1,0,0,0,110,
        381,1,0,0,0,112,387,1,0,0,0,114,396,1,0,0,0,116,409,1,0,0,0,118,
        413,1,0,0,0,120,428,1,0,0,0,122,432,1,0,0,0,124,438,1,0,0,0,126,
        127,3,36,16,0,127,128,3,42,19,0,128,129,3,42,19,0,129,5,1,0,0,0,
        130,131,3,36,16,0,131,132,3,42,19,0,132,133,3,42,19,0,133,134,5,
        45,0,0,134,135,3,36,16,0,135,136,3,72,34,0,136,137,3,72,34,0,137,
        138,3,44,20,0,138,139,3,74,35,0,139,7,1,0,0,0,140,141,3,70,33,0,
        141,142,3,44,20,0,142,143,3,60,28,0,143,144,3,64,30,0,144,145,3,
        78,37,0,145,146,3,44,20,0,146,9,1,0,0,0,147,148,3,70,33,0,148,149,
        3,44,20,0,149,150,3,66,31,0,150,151,3,58,27,0,151,152,3,36,16,0,
        152,153,3,40,18,0,153,154,3,44,20,0,154,11,1,0,0,0,155,156,3,70,
        33,0,156,157,3,44,20,0,157,158,3,66,31,0,158,159,3,58,27,0,159,160,
        3,36,16,0,160,161,3,40,18,0,161,162,3,44,20,0,162,163,5,45,0,0,163,
        164,3,36,16,0,164,165,3,58,27,0,165,166,3,58,27,0,166,13,1,0,0,0,
        167,168,3,72,34,0,168,169,3,44,20,0,169,170,3,74,35,0,170,171,5,
        45,0,0,171,172,3,78,37,0,172,173,3,36,16,0,173,174,3,70,33,0,174,
        15,1,0,0,0,175,176,3,44,20,0,176,177,3,82,39,0,177,178,3,66,31,0,
        178,179,3,64,30,0,179,180,3,70,33,0,180,181,3,74,35,0,181,182,5,
        45,0,0,182,183,3,78,37,0,183,184,3,36,16,0,184,185,3,70,33,0,185,
        17,1,0,0,0,186,187,3,36,16,0,187,188,3,66,31,0,188,189,3,66,31,0,
        189,190,3,58,27,0,190,191,3,84,40,0,191,192,5,45,0,0,192,193,3,66,
        31,0,193,194,3,36,16,0,194,195,3,74,35,0,195,196,3,40,18,0,196,197,
        3,50,23,0,197,19,1,0,0,0,198,199,3,44,20,0,199,200,3,82,39,0,200,
        201,3,44,20,0,201,202,3,40,18,0,202,203,5,45,0,0,203,204,3,66,31,
        0,204,205,3,84,40,0,205,206,3,74,35,0,206,207,3,50,23,0,207,208,
        3,64,30,0,208,209,3,62,29,0,209,21,1,0,0,0,210,211,3,42,19,0,211,
        212,3,44,20,0,212,213,3,46,21,0,213,214,3,52,24,0,214,215,3,62,29,
        0,215,216,3,44,20,0,216,217,3,72,34,0,217,218,3,66,31,0,218,219,
        3,70,33,0,219,220,3,52,24,0,220,221,3,74,35,0,221,222,3,44,20,0,
        222,230,1,0,0,0,223,224,3,46,21,0,224,225,3,70,33,0,225,226,3,36,
        16,0,226,227,3,60,28,0,227,228,3,44,20,0,228,230,1,0,0,0,229,210,
        1,0,0,0,229,223,1,0,0,0,230,232,1,0,0,0,231,233,9,0,0,0,232,231,
        1,0,0,0,233,234,1,0,0,0,234,235,1,0,0,0,234,232,1,0,0,0,235,236,
        1,0,0,0,236,237,5,46,0,0,237,238,5,97,0,0,238,239,5,115,0,0,239,
        249,1,0,0,0,240,241,3,72,34,0,241,242,3,80,38,0,242,243,3,46,21,
        0,243,244,5,46,0,0,244,245,5,120,0,0,245,246,5,109,0,0,246,247,5,
        108,0,0,247,249,1,0,0,0,248,229,1,0,0,0,248,240,1,0,0,0,249,23,1,
        0,0,0,250,251,3,38,17,0,251,252,3,44,20,0,252,253,3,48,22,0,253,
        254,3,52,24,0,254,255,3,62,29,0,255,256,5,45,0,0,256,257,3,66,31,
        0,257,258,3,36,16,0,258,259,3,74,35,0,259,260,3,40,18,0,260,261,
        3,50,23,0,261,262,1,0,0,0,262,263,6,10,0,0,263,25,1,0,0,0,264,265,
        3,38,17,0,265,266,3,44,20,0,266,267,3,48,22,0,267,268,3,52,24,0,
        268,269,3,62,29,0,269,270,5,45,0,0,270,271,3,40,18,0,271,272,3,64,
        30,0,272,273,3,62,29,0,273,274,3,74,35,0,274,275,3,44,20,0,275,276,
        3,62,29,0,276,277,3,74,35,0,277,278,1,0,0,0,278,279,6,11,1,0,279,
        27,1,0,0,0,280,281,3,46,21,0,281,282,3,76,36,0,282,283,3,62,29,0,
        283,284,3,40,18,0,284,285,3,74,35,0,285,286,3,52,24,0,286,287,3,
        64,30,0,287,288,3,62,29,0,288,29,1,0,0,0,289,290,3,44,20,0,290,291,
        3,62,29,0,291,292,3,42,19,0,292,31,1,0,0,0,293,294,5,40,0,0,294,
        33,1,0,0,0,295,296,5,41,0,0,296,35,1,0,0,0,297,298,7,0,0,0,298,37,
        1,0,0,0,299,300,7,1,0,0,300,39,1,0,0,0,301,302,7,2,0,0,302,41,1,
        0,0,0,303,304,7,3,0,0,304,43,1,0,0,0,305,306,7,4,0,0,306,45,1,0,
        0,0,307,308,7,5,0,0,308,47,1,0,0,0,309,310,7,6,0,0,310,49,1,0,0,
        0,311,312,7,7,0,0,312,51,1,0,0,0,313,314,7,8,0,0,314,53,1,0,0,0,
        315,316,7,9,0,0,316,55,1,0,0,0,317,318,7,10,0,0,318,57,1,0,0,0,319,
        320,7,11,0,0,320,59,1,0,0,0,321,322,7,12,0,0,322,61,1,0,0,0,323,
        324,7,13,0,0,324,63,1,0,0,0,325,326,7,14,0,0,326,65,1,0,0,0,327,
        328,7,15,0,0,328,67,1,0,0,0,329,330,7,16,0,0,330,69,1,0,0,0,331,
        332,7,17,0,0,332,71,1,0,0,0,333,334,7,18,0,0,334,73,1,0,0,0,335,
        336,7,19,0,0,336,75,1,0,0,0,337,338,7,20,0,0,338,77,1,0,0,0,339,
        340,7,21,0,0,340,79,1,0,0,0,341,342,7,22,0,0,342,81,1,0,0,0,343,
        344,7,23,0,0,344,83,1,0,0,0,345,346,7,24,0,0,346,85,1,0,0,0,347,
        348,7,25,0,0,348,87,1,0,0,0,349,350,7,26,0,0,350,89,1,0,0,0,351,
        352,7,27,0,0,352,91,1,0,0,0,353,354,5,32,0,0,354,93,1,0,0,0,355,
        356,7,28,0,0,356,95,1,0,0,0,357,358,5,46,0,0,358,97,1,0,0,0,359,
        361,3,90,43,0,360,359,1,0,0,0,361,362,1,0,0,0,362,360,1,0,0,0,362,
        363,1,0,0,0,363,99,1,0,0,0,364,365,5,45,0,0,365,101,1,0,0,0,366,
        367,5,43,0,0,367,103,1,0,0,0,368,369,5,61,0,0,369,105,1,0,0,0,370,
        371,5,34,0,0,371,372,1,0,0,0,372,373,6,51,2,0,373,374,6,51,3,0,374,
        107,1,0,0,0,375,377,8,29,0,0,376,375,1,0,0,0,377,378,1,0,0,0,378,
        376,1,0,0,0,378,379,1,0,0,0,379,109,1,0,0,0,380,382,7,30,0,0,381,
        380,1,0,0,0,382,383,1,0,0,0,383,381,1,0,0,0,383,384,1,0,0,0,384,
        385,1,0,0,0,385,386,6,53,2,0,386,111,1,0,0,0,387,391,5,35,0,0,388,
        390,8,31,0,0,389,388,1,0,0,0,390,393,1,0,0,0,391,389,1,0,0,0,391,
        392,1,0,0,0,392,394,1,0,0,0,393,391,1,0,0,0,394,395,6,54,2,0,395,
        113,1,0,0,0,396,397,3,44,20,0,397,398,3,62,29,0,398,399,3,42,19,
        0,399,400,5,45,0,0,400,401,3,66,31,0,401,402,3,36,16,0,402,403,3,
        74,35,0,403,404,3,40,18,0,404,405,3,50,23,0,405,406,1,0,0,0,406,
        407,6,55,4,0,407,115,1,0,0,0,408,410,9,0,0,0,409,408,1,0,0,0,410,
        411,1,0,0,0,411,412,1,0,0,0,411,409,1,0,0,0,412,117,1,0,0,0,413,
        414,3,44,20,0,414,415,3,62,29,0,415,416,3,42,19,0,416,417,5,45,0,
        0,417,418,3,40,18,0,418,419,3,64,30,0,419,420,3,62,29,0,420,421,
        3,74,35,0,421,422,3,44,20,0,422,423,3,62,29,0,423,424,3,74,35,0,
        424,425,1,0,0,0,425,426,6,57,4,0,426,119,1,0,0,0,427,429,9,0,0,0,
        428,427,1,0,0,0,429,430,1,0,0,0,430,431,1,0,0,0,430,428,1,0,0,0,
        431,121,1,0,0,0,432,433,3,106,51,0,433,434,1,0,0,0,434,435,6,59,
        2,0,435,436,6,59,4,0,436,123,1,0,0,0,437,439,8,32,0,0,438,437,1,
        0,0,0,439,440,1,0,0,0,440,438,1,0,0,0,440,441,1,0,0,0,441,125,1,
        0,0,0,14,0,1,2,3,229,234,248,362,378,383,391,411,430,440,5,2,1,0,
        2,2,0,6,0,0,2,3,0,2,0,0
    ]

class PatchfileLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    ADD_BLOCK_MODE = 1
    CONTENT_MODE = 2
    QUOTE_MODE = 3

    ADD = 1
    ADD_ASSET = 2
    REMOVE = 3
    REPLACE = 4
    REPLACE_ALL = 5
    SET_VAR = 6
    EXPORT_VAR = 7
    EXEC_PATCHER = 8
    EXEC_PYTHON = 9
    FILENAME = 10
    BEGIN_PATCH = 11
    BEGIN_CONTENT = 12
    FUNCTION = 13
    END = 14
    OPEN_BLOCK = 15
    CLOSE_BLOCK = 16
    INTEGER = 17
    DASH = 18
    PLUS = 19
    EQUALS = 20
    QUOTE = 21
    TEXT_BLOCK = 22
    WHITESPACE = 23
    COMMENT = 24
    END_PATCH = 25
    AS_TEXT = 26
    END_CONTENT = 27
    CONTENT_TEXT = 28
    END_QUOTE = 29
    QUOTED_TEXT = 30

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE", "ADD_BLOCK_MODE", "CONTENT_MODE", "QUOTE_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'-'", "'+'", "'='", "'\"'" ]

    symbolicNames = [ "<INVALID>",
            "ADD", "ADD_ASSET", "REMOVE", "REPLACE", "REPLACE_ALL", "SET_VAR", 
            "EXPORT_VAR", "EXEC_PATCHER", "EXEC_PYTHON", "FILENAME", "BEGIN_PATCH", 
            "BEGIN_CONTENT", "FUNCTION", "END", "OPEN_BLOCK", "CLOSE_BLOCK", 
            "INTEGER", "DASH", "PLUS", "EQUALS", "QUOTE", "TEXT_BLOCK", 
            "WHITESPACE", "COMMENT", "END_PATCH", "AS_TEXT", "END_CONTENT", 
            "CONTENT_TEXT", "END_QUOTE", "QUOTED_TEXT" ]

    ruleNames = [ "ADD", "ADD_ASSET", "REMOVE", "REPLACE", "REPLACE_ALL", 
                  "SET_VAR", "EXPORT_VAR", "EXEC_PATCHER", "EXEC_PYTHON", 
                  "FILENAME", "BEGIN_PATCH", "BEGIN_CONTENT", "FUNCTION", 
                  "END", "OPEN_BLOCK", "CLOSE_BLOCK", "A", "B", "C", "D", 
                  "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", 
                  "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", 
                  "LETTER", "NUMBER", "SPACE", "SLASH", "DOT", "INTEGER", 
                  "DASH", "PLUS", "EQUALS", "QUOTE", "TEXT_BLOCK", "WHITESPACE", 
                  "COMMENT", "END_PATCH", "AS_TEXT", "END_CONTENT", "CONTENT_TEXT", 
                  "END_QUOTE", "QUOTED_TEXT" ]

    grammarFileName = "PatchfileLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None



{
  "hash": "b99ee5816fe32019855726863a82be1e",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Guide\ntoc: true\ntoc-expand: true\n---\n\n[![Build](https://github.com/front-matter/commonmeta-py/actions/workflows/build.yml/badge.svg)](https://github.com/front-matter/commonmeta-py/actions/workflows/build.yml)\n[![PyPI version](https://img.shields.io/pypi/v/commonmeta-py.svg)](https://pypi.org/project/commonmeta-py/)\n[![docs](https://img.shields.io/badge/docs-passing-blue)](https://python.commonmeta.org/)\n![GitHub](https://img.shields.io/github/license/front-matter/commonmeta-py?logo=MIT)\n\ncommonmeta-py is a Python library to implement commonmeta, the metadata format for common scholarly metadata. Use commonmeta-py to convert scholarly metadata from/to a variety of metadata formats, listed below. Commonmeta-py is work in progress, the first release on PyPi (version 0.5.0) was on February 16, 2023. Up until version 0.5.1, the library was called talbot. Commonmeta-py is modelled after the [briard ruby gem](https://github.com/front-matter/briard).\n\n## Installation\n\nStable version\n```\npip (or pip3) install commonmeta-py\n```\n\nDev version\n```\npip install git+https://github.com/front-matter/commonmeta-py.git#egg=commonmeta-py\n```\n\n## Testing\n\ncommonmeta-py uses `pytest` and `vcrpy` for testing. To run the tests, issue one of the following commands from the root folder:\n\nAll tests:\n```\npytest\n```\n\nAll tests in a test file, e.g. `tests/test-utils.py`:\n\n```{bash}\npytest tests/test-utils.py\n```\n\n\nRun a specific test e.g. `test_datacite_api_url` in `tests/test-utils.py`:\n\n```{bash}\npytest tests/test-utils.py -k 'test_datacite_api_url'\n```\n\n\n`vcrpy`records HTTP requests to speed up testing. \n\n## Supported Formats\n\nCommometa-py reads and/or writes these metadata formats:\n\n| Format                                                                                           | Name          | Content Type                           | Read    | Write   |\n| ------------------------------------------------------------------------------------------------ | ------------- | -------------------------------------- | ------- | ------- |\n| Commonmeta  | commonmeta    | application/vnd.commonmeta+json        | yes     | yes     |\n| [CrossRef Unixref XML](https://www.crossref.org/schema/documentation/unixref1.1/unixref1.1.html) | crossref_xml      | application/vnd.crossref.unixref+xml   | yes | planned |\n| [Crossref](https://api.crossref.org)                                                             | crossref | application/vnd.crossref+json          | yes     | no      |\n| [DataCite XML](https://schema.datacite.org/)                                                     | datacite_xml      | application/vnd.datacite.datacite+xml  | yes | later |\n| [DataCite](https://api.datacite.org/)                                                            | datacite | application/vnd.datacite.datacite+json | yes     | yes |\n| [Schema.org (in JSON-LD)](http://schema.org/)                                                    | schema_org    | application/vnd.schemaorg.ld+json      | yes     | yes     |\n| [RDF XML](http://www.w3.org/TR/rdf-syntax-grammar/)                                              | rdf_xml       | application/rdf+xml                    | no      | later   |\n| [RDF Turtle](http://www.w3.org/TeamSubmission/turtle/)                                           | turtle        | text/turtle                            | no      | later   |\n| [CSL-JSON](https://citationstyles.org/)                                                     | csl      | pplication/vnd.citationstyles.csl+json | yes | yes     |\n| [Formatted text citation](https://citationstyles.org/)                                           | citation      | text/x-bibliography                    | no      | yes     |\n| [Codemeta](https://codemeta.github.io/)                                                          | codemeta      | application/vnd.codemeta.ld+json       | yes | later |\n| [Citation File Format (CFF)](https://citation-file-format.github.io/)                            | cff           | application/vnd.cff+yaml               | yes | later |\n| [JATS](https://jats.nlm.nih.gov/)                                                                | jats          | application/vnd.jats+xml               | later   | later   |\n| [CSV](ttps://en.wikipedia.org/wiki/Comma-separated_values)                                       | csv           | text/csv                               | no      | later   |\n| [BibTex](http://en.wikipedia.org/wiki/BibTeX)                                                    | bibtex        | application/x-bibtex                   | later | yes     |\n| [RIS](http://en.wikipedia.org/wiki/RIS_(file_format))                                            | ris           | application/x-research-info-systems    | later | yes     |\n| [InvenioRDM](https://inveniordm.docs.cern.ch/reference/metadata/)                                | inveniordm    | application/vnd.inveniordm.v1+json     | later | yes     |\n| [JSON Feed](https://www.jsonfeed.org/)                                                           | json_feed_item     | application/feed+json    | yes | later     |\n\n_commonmeta_: the Commonmeta format is the native format for the library and used internally.\n_Planned_: we plan to implement this format for the v1.0 public release.  \n_Later_: we plan to implement this format in a later release.\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}